#--------------------------------------------------------------------

[gcode_macro _SetSlicerVar]
description: Used to runtime set slicer variables contained in gcode (done at slice time w/ regex post processing) 
# added ability to call dynamic PA setting based on mesh line type (Cura has a plugin, PS doesn't...)
# added logic to prevent inadvertent mid-print lowering of maxz due to OAAT/Sequential printing.
# WIP stuffs that I nix'd for now...
gcode:

	{% set svv = printer.save_variables.variables %}				# set eazy accesss context for save_variables object

	# allow dynamic PA setting, based on mesh/line type
	{% if params.VARIABLE|string == "TYPE" %}
		_SetDynamicPA MESH={params.VALUE|string|lower}
		save_variable VARIABLE='last_spd_fact' VALUE={printer.gcode_move.speed_factor|float}	# store current speed factor
	{% endif %}
	
	# fix maxz to not overwrite a equal or higher saved value
	# 'one at a time'/'sequential' context will have implications
	# https://help.prusa3d.com/en/article/sequential-printing_124589
	# print start/end/canx overtly resets maxz to 0.0 between prints
	{% if params.VARIABLE|string == "maxz" %}
		{% if svv.maxz|float < params.VALUE|float %}
			SAVE_VARIABLE {rawparams|lower}
		{% endif %}
	{% else %}
		SAVE_VARIABLE {rawparams|lower}
	{% endif %}
	
	# # added herein to forcibly slow down nozzle, based on mesh type Overhang perimeter, until I found out I was wrong. lol
	# # I am seeing issues at high pring speeds with internal external perimeters where the filament strands pluck away from
	# # the inner radii (regardless of radius) - prolly sumptin I am doing wrong (i.e. printing too damn fast.?.)  I thought
	# # overhang perimeters were where I was seeing the issue, but those aren't it.  Seems a new line type may be warranted.?.
	# {% if params.VARIABLE|string == "TYPE" and params.VALUE|string == "Overhang perimeter" %}	# if ;TYPE:Overhang perimeter
		# save_variable VARIABLE='last_spd_fact' VALUE={printer.gcode_move.speed_factor|float}	# store current speed factor
		# M220 S50																				# force a 50% slowdown
        # M300 S200 P1    																		# emit shortest possible low-freq bloop, a low-irritation get-user-attention thing
		# M118 >>> Forced a 50% speed factor due to Overhang Perimeter Line Type <<<				# advise user
		# _SetDynamicPA MESH={params.VALUE|string|lower}											# and set PA by type
	# {% elif params.VARIABLE|string == "TYPE" %}													# if ;TYPE:not Overhang perimeter
		# _SetDynamicPA MESH={params.VALUE|string|lower}											# set PA by type
		# {% if printer.gcode_move.speed_factor|float != printer.save_variables.variables.last_spd_fact|float %} #see if spd factor needs to be restored
			# M300 S1200 P1    																		# emit shortest possible low-freq bloop, a low-irritation get-user-attention thing
			# M118 >>> Restoring Speed Factor: {printer.save_variables.variables.last_spd_fact} <<<	# if so, advise user, and
			# M220 {printer.save_variables.variables.last_spd_fact|float}								# restore last saved speed factor
		# {% endif %}
	# {% endif %}

#--------------------------------------------------------------------

[gcode_macro M117.1]
description:  workaround for fixing a zero-based layer display - slicer is zero-based, gray matter is 1-based...
# params = L=LAYERNUM T=TOTALLAYERS
# sample slicer use: M117.1 L[layer_num] T[total_layer_count]
gcode:
	M117 Layer {(params.L|int + 1)|int}/{params.T|int}

