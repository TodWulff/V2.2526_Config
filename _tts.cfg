[delayed_gcode _tts_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_tts_loaded func_params='"{rawparams|string}"'
	_module_loaded MODULE=_tts
	_proc_end function=_tts_loaded

#--------------------------------------------------------------------

[delayed_gcode _tts_module_start]
#description: Sets module-specific state flags for conditional use elsewhere.
initial_duration: 1.0							# have this at 0.5s as init code in _startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_tts_module_start func_params='"{rawparams|string}"'

	SAVE_VARIABLE VARIABLE=module_tts_loaded VALUE=1					#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=tts_err_flag VALUE=0						#init error flag via persistent variable that this module is not in error

	_proc_end function=_tts_module_start

#--------------------------------------------------------------------

[gcode_shell_command say]
#command: sh /home/pi/printer_data/config/say.sh
command: say
timeout: 10
verbose: false

#--------------------------------------------------------------------

[gcode_macro say]
gcode:
	_proc_start function=say func_params={rawparams|string}

	{% set svv = printer.save_variables.variables %}							# set context for save_variables object

	{% if svv.module_shell_command_loaded %}										# verify we can call host scripts
		{% if params.S|lower != svv.last_tts_phrase|lower %}					# verify we didn't just make the same utterance
			{% if printer["gcode_macro _printer_vars"].ptr_verb_speech %}		# and verify that a gag order doesn't exist
				#M118 saying: '{params.S}'										# if not, speak, biotch
				RUN_SHELL_CMD CMD=say PARAMS='{params.S}'					
				SAVE_VARIABLE VARIABLE=last_tts_phrase VALUE='"{params.S}"'	# and historize this utterance
			{% else %}
				M118 say: Can't synthesize {params.S} - fully gagged
			{% endif %}
		{% else %}
			M118 say: Won't synthesize {params.S} - just said that...
		{% endif %}
	{% else %}
		M118 say: Can't synthesize {params.S} as Shell_Commands is MIA
	{% endif %}

	_proc_end function=say

#--------------------------------------------------------------------

[gcode_shell_command say_wait]
#command: sh /home/pi/printer_data/config/say_wait.sh
command: say_wait
timeout: 600
verbose: false

#--------------------------------------------------------------------

[gcode_macro say_wait]
gcode:
	_proc_start function=say func_params={rawparams|string}

	{% set svv = printer.save_variables.variables %}						# set context for save_variables object

	{% if svv.module_shell_command_loaded %}								# verify we can call host scripts
		{% if params.S|lower != svv.last_tts_phrase %}						# verify we didn't just make the same utterance
			{% if printer["gcode_macro _printer_vars"].ptr_verb_speech %}	# and verify that a gag order doesn't exist
				#M118 saying: '{params.S}'									# if not, speak, biotch
				RUN_SHELL_CMD CMD=say_wait PARAMS='{params.S}'              
				SAVE_VARIABLE VARIABLE=last_tts_phrase VALUE='"{params.S}"'	# and historize this utterance
			{% else %}
				M118 say_wait: Can't synthesize {params.s} - fully gagged
			{% endif %}
		{% else %}
			M118 say_wait: Won't synthesize {params.s} - just said that...
		{% endif %}
	{% else %}
		M118 say_wait: Can't synthesize {params.s} as Shell_Commands is MIA
	{% endif %}

	_proc_end function=say

#--------------------------------------------------------------------


