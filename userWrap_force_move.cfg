#####################################################################
# _userWrap_force_move
#####################################################################

[delayed_gcode _userWrap_force_move_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_force_move_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_userWrap_force_move
	_proc_end function=_force_move_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_force_move]
gcode:

# user config to wrap FW procs constained in force_move.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_force_move_vars]
description: macro for _force_move variables

gcode:

	_proc_start function=_force_move_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_force_move_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_force_move_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_force_move_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_force_move_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_force_move_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_force_move_module_start

#--------------------------------------------------------------------

[gcode_macro FORCE_MOVE]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _FORCE_MOVE_STOCK
gcode:

	_proc_start function=FORCE_MOVE func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_FORCE_MOVE_STOCK {rawparams}

	_proc_end function=FORCE_MOVE

#--------------------------------------------------------------------

[gcode_macro SET_KINEMATIC_POSITION]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _SET_KINEMATIC_POSITION_STOCK
gcode:

	_proc_start function=SET_KINEMATIC_POSITION func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_SET_KINEMATIC_POSITION_STOCK {rawparams}

	_proc_end function=SET_KINEMATIC_POSITION

#--------------------------------------------------------------------

[gcode_macro STEPPER_BUZZ]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _STEPPER_BUZZ_STOCK
gcode:

	_proc_start function=STEPPER_BUZZ func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_STEPPER_BUZZ_STOCK {rawparams}

	_proc_end function=STEPPER_BUZZ

#--------------------------------------------------------------------


