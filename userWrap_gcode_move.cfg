#####################################################################
# _userWrap_gcode_move
#####################################################################

[delayed_gcode _userWrap_gcode_move_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_gcode_move_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_userWrap_gcode_move
	_proc_end function=_gcode_move_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_gcode_move]
gcode:

# user config to wrap FW procs constained in gcode_move.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_gcode_move_vars]
description: macro for _gcode_move variables

gcode:

	_proc_start function=_gcode_move_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_gcode_move_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_gcode_move_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_gcode_move_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_gcode_move_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_gcode_move_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_gcode_move_module_start

[gcode_macro G0]
description: G0, with console echo if enabled
rename_existing: G0.1
gcode:
	_proc_start function=G0 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	
	{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}
		{% set newparams = rawparams|upper|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")%}
		log_gmove S="G0 {newparams}"
	{% endif %}
	
	G0.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=G0

#--------------------------------------------------------------------

[gcode_macro G1]
description: G1, with console echo if enabled
rename_existing: G1.1
gcode:
	_proc_start function=G1 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	
	{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
		{% set newparams = rawparams|upper|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")%}
		log_gmove S="G1 {newparams}"
	{% endif %}
	
	G1.1 {rawparams}			# debating with the other me if this should be above conditionals...
	
	_proc_end function=G1

#--------------------------------------------------------------------

[gcode_macro G20]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: G20.1
gcode:

	_proc_start function=G20 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	G20.1 {rawparams}

	_proc_end function=G20

#--------------------------------------------------------------------

[gcode_macro G21]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: G21.1
gcode:

	_proc_start function=G21 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	G21.1 {rawparams}

	_proc_end function=G21

#--------------------------------------------------------------------

[gcode_macro G90]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: G90.1
gcode:

	_proc_start function=G90 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	G90.1 {rawparams}

	_proc_end function=G90

#--------------------------------------------------------------------

[gcode_macro G91]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: G91.1
gcode:

	_proc_start function=G91 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	G91.1 {rawparams}

	_proc_end function=G91

#--------------------------------------------------------------------

[gcode_macro G92]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: G92.1
gcode:

	_proc_start function=G92 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	G92.1 {rawparams}

	_proc_end function=G92

#--------------------------------------------------------------------

[gcode_macro GET_POSITION]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _GET_POSITION_STOCK
gcode:

	_proc_start function=GET_POSITION func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_GET_POSITION_STOCK {rawparams}

	_proc_end function=GET_POSITION

#--------------------------------------------------------------------

[gcode_macro M114]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: M114.1
gcode:

	_proc_start function=M114 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	M114.1 {rawparams}

	_proc_end function=M114

#--------------------------------------------------------------------

[gcode_macro M82]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: M82.1
gcode:

	_proc_start function=M82 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	M82.1 {rawparams}

	_proc_end function=M82

#--------------------------------------------------------------------

[gcode_macro M83]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: M83.1
gcode:

	_proc_start function=M83 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	M83.1 {rawparams}

	_proc_end function=M83

#--------------------------------------------------------------------

[gcode_macro M220]
description: wrap FW proc for userLogging purposes
rename_existing: M220.1
gcode:
	_proc_start function=M220 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	#added this as suggested by Q66 to avoid killing a print by running M220 past a pre-defined lowest setting
	{% if params.S is defined %}
		{% set s = params.S|float %}
		{% if s < printer["gcode_macro _printer_vars"].min_speed_factor|float %}
			{% set s = printer["gcode_macro _printer_vars"].min_speed_factor|float %}
			{% set newparams = rawparams|replace("S", "orig") ~ " S" ~ s|float %}

			{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
				log_gmove S="M118 Speed Factor Setting Overridden to Min: {s|float}ï¼…"
			{% endif %}

		{% else %}
			{% set newparams = rawparams %}
		{% endif %}
	{% endif %}

	{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
		{% set newparams = newparams|upper|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")%}
		log_gmove S="M220 {newparams}"
	{% endif %}
	
	say S="Speed {s|int}"
	M220.1 {newparams}
	_proc_end function=M220

#--------------------------------------------------------------------

[gcode_macro M221]
description: wrap FW proc for userLogging purposes
rename_existing: M221.1
gcode:
	_proc_start function=M221 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	
	{% set entry_rate = (printer.gcode_move.extrude_factor*100)|int %}

	{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
		{% set newparams = rawparams|upper|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")%}
		log_gmove S="M221 {newparams}"
	{% endif %}

	# limit chattiness
	{% if entry_rate != params.S|int %}
		say S="Extrusion {params.S|int}"
	{% endif %}
	
	M221.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=M221

#--------------------------------------------------------------------

[gcode_macro SAVE_GCODE_STATE]
description: wrap FW proc for userLogging purposes
rename_existing: _SAVE_GCODE_STATE_STOCK
gcode:

	_proc_start function=SAVE_GCODE_STATE func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'  

	{% if printer["gcode_macro _debug__tools_vars"].debug_gcode_state %}  
		{% set newparams = rawparams|upper|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")%}
		log_state S="SAVE: {newparams}"
	{% endif %}

	save_variable VARIABLE=last_saved_gcode_state VALUE='"{params.NAME}"'
	_SAVE_GCODE_STATE_STOCK {rawparams}

	_proc_end function=SAVE_GCODE_STATE 

#--------------------------------------------------------------------

[gcode_macro RESTORE_GCODE_STATE]
description: wrap FW proc for userLogging purposes
rename_existing: _RESTORE_GCODE_STATE_STOCK
gcode:

	_proc_start function=RESTORE_GCODE_STATE func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'  

	{% if printer["gcode_macro _debug__tools_vars"].debug_gcode_state %}  
		{% set newparams = rawparams|upper|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")%}
		log_state S="RSTR: {newparams}"
	{% endif %}

	save_variable VARIABLE=last_restored_gcode_state VALUE='"{params.NAME}"'
	
	{% if params.NAME != "PAUSE_STATE" %}
		_RESTORE_GCODE_STATE_STOCK {rawparams}
	{% else %}
		# _RESTORE_GCODE_STATE_STOCK NAME=PAUSE_STATE
		{% if printer["gcode_macro _debug__tools_vars"].debug_gcode_state %}  
			log_state S="RESTORE_GCODE_STATE >>>SKIPPED<<<"
		{% endif %}

	{% endif %}

	_proc_end function=RESTORE_GCODE_STATE 

#--------------------------------------------------------------------

[gcode_macro SET_GCODE_OFFSET]				# FW Wrapper for state variable purposes
description: wrap FW proc to reset z_axis_cal flag if a z axis offset is entered/cleared through ui
rename_existing: _SET_GCODE_OFFSET_STOCK
gcode:

	_proc_start function=SET_GCODE_OFFSET func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# see if z offset is being set/cleared and if so, clear z autocal flag
	{% set z_flag = params.Z|default(-999999.99)|float %}
	{% if z_flag != -999999.99 %}
		save_variable VARIABLE=z_axis_cal VALUE=0
		N300
		N300
		N300
#		M118 z_axis_cal cleared
	{% endif %}

	_SET_GCODE_OFFSET_STOCK {rawparams}

	_proc_end function=SET_GCODE_OFFSET

#--------------------------------------------------------------------


