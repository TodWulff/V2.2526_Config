#####################################################################
# 	Linear Advance Stuffs
#####################################################################

[delayed_gcode _linear_advance_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_linear_advance_loaded func_params='"{rawparams|string}"'
	_module_loaded MODULE=_linear_advance
	_proc_end function=_linear_advance_loaded

#--------------------------------------------------------------------

[delayed_gcode _linadv_module_start]		
#description: Sets module-specific state flags for conditional use elsewhere.
initial_duration: 0.5							# have this at 0.5s as init code in _startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_linadv_module_start func_params='"{rawparams|string}"'
	{% if printer["gcode_macro _linadv_vars"].linadv_verb_codeflow %} M118 >>> _linadv_module_start Start <<< {% endif %}

	SAVE_VARIABLE VARIABLE=module_linadv_loaded VALUE=1					#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=linadv_err_flag VALUE=0						#init error flag via persistent variable that this module is not in error

	{% if printer["gcode_macro _linadv_vars"].linadv_verb_codeflow %} M118 >>> _linadv_module_start End <<< {% endif %}
	_proc_end function=_linadv_module_start

#--------------------------------------------------------------------

[gcode_macro _info_linear_advance]
gcode:

# Adds M900 Support - used by Slicer G-Code and/or Plugins
# Adds ability to set dynamic pressure advance by specific slicer line types (PS in this case)
# Requires some regex post processing by the slicer be instantiated before this can be used

# todo - write up on module's purpose/function/implementation/use
# see user_interaction for an example of intended use

[gcode_macro _linadv_vars]
description: led effects module variables

variable_linadv_verb_error:		1		# set to 0 to mute error reporting (um, errors. lol)
variable_linadv_verb_info:		0	 # set to 0 to mute info reporting (has data)
variable_linadv_verb_status:	0	 # set to 0 to mute status reporting (useful modes, update, etc.)
variable_linadv_verb_debug:		0	 # set to 0 to mute debugs stuffs I added (proc entry/exit)
variable_linadv_verb_codeflow:	0		# set to 0 to mute code flow stuffs I added (proc entry/exit)

#	SET_GCODE_VARIABLE MACRO=_linadv_vars VARIABLE=dynamic_pa_enable VALUE=1
variable_dynamic_pa_enable:		0

gcode:

	_proc_start function=_linadv_vars func_params='"{rawparams|string}"'

	# there is none

	_proc_end function=_linadv_vars

#--------------------------------------------------------------------

[gcode_macro M900]
description: Set Pressure Advance - Param K=K-Factor|float, other params are ignored

gcode:

	_proc_start function=M900 func_params='"{rawparams|string}"'

	{% if 'K' in params %}
		{% if printer["gcode_macro _linadv_vars"].linadv_verb_info %}
			M118 M900 - {'PA:' + params.K|float|string + ' ST:' + printer.extruder.smooth_time|float|string}
		{% endif %}
		SET_PRESSURE_ADVANCE ADVANCE={params.K|float}	# SMOOTH_TIME=<pressure_advance_smooth_time>
	{% else %}
		{% if printer["gcode_macro _linadv_vars"].linadv_verb_error %}
			M118 >>> M900: No PA K-factor passed... <<<
		{% endif %}
	{% endif %}

	_proc_end function=M900

#--------------------------------------------------------------------

[gcode_macro _SetDynamicPA]
description: Used to set klipper's PA based on specific mesh types passed in gcode
# parameter to be passed is a case-insenitive spaces-inclusive string MESH="mesh name"
variable_mesh_name =	["Unknown",	"Perimeter",	"External perimeter",	"Overhang perimeter",	"Internal infill",	"Solid infill",	"Top solid infill",	"Ironing",	"Bridge infill",	"Gap fill",		"Skirt/Brim",	"Support material",	"Support material interface",	"Wipe tower",	"Custom",	"Mixed"		]

# KVP ABS via Orbiter v1.5 on AB with Phaetus Dragon HF HE and a Dyze Design 0.4mm TC nozzle
# variable_mesh_kval =	[0.0,			0.035,			0.0,						0.0,					0.085,			0.085,			0.085,				0.0,		0.085,				0.085,			0.085,			0.085,				0.085,							0.0,			0.085,		0.035	]

# nix'g the dynamic PA values, pending tuning for larger nozzle just installed
variable_mesh_kval =	[0.0,			0.0,			0.0,						0.0,					0.0,			0.0,			0.0,				0.0,		0.0,				0.0,			0.0,			0.0,				0.0,							0.0,			0.0,		0.0	]

variable_mesh_smtm =	[0.040,			0.040,			0.040,						0.040,					0.040,			0.040,			0.040,				0.040,		0.040,				0.040,			0.040,			0.040,				0.040,							0.040,			0.040,		0.040	]

gcode:

	_proc_start function=_SetDynamicPA func_params='"{rawparams|string}"'

	{% if printer["gcode_macro _linadv_vars"].dynamic_pa_enable %}

		{% if printer["gcode_macro _linadv_vars"].linadv_verb_codeflow %} M118 >>> _SetDynamicPA Start <<< {% endif %}

			{% set sdpa = namespace(pa_unset=true) %}
			{% set sdpb = namespace(matches=0) %}

			{% for mesh_idx in range(printer["gcode_macro _SetDynamicPA"].mesh_name|length) %}
				{% if params.MESH|string|lower == printer["gcode_macro _SetDynamicPA"].mesh_name[mesh_idx|int]|string|lower %}
					SET_PRESSURE_ADVANCE ADVANCE={printer["gcode_macro _SetDynamicPA"].mesh_kval[mesh_idx|int]|float} SMOOTH_TIME={printer["gcode_macro _SetDynamicPA"].mesh_smtm[mesh_idx|int]|float}
					{% set sdpa.pa_unset = false %}
					{% set sdpb.matches = sdpb.matches + 1 %}
				{% endif %}
			{% endfor %}

			{% if sdpa.pa_unset %}
				{% if printer["gcode_macro _linadv_vars"].linadv_verb_error %}
					M118 >>> _SetDynamicPA|UNKNOWN MESH: {params.MESH|string|lower} <<<
				{% endif %}
				M300 S200 P50	# emit shortest possible low-freq bloop, a low-irritation get-user-attention thing about no mesh-specific setting
			{% endif %}

			{% if sdpb.matches > 1 %}
				{% if printer["gcode_macro _linadv_vars"].linadv_verb_error %}
					M118 >>> _SetDynamicPA|Multiple matches on MESH: {params.MESH|string|lower} - matched {sdpb.matches} times <<<
				{% endif %}
				M300 S200 P50	# emit shortest possible low-freq bloop, a low-irritation get-user-attention thing about multiple matches
			{% endif %}

		{% if printer["gcode_macro _linadv_vars"].linadv_verb_codeflow %} M118 >>> _SetDynamicPA End <<< {% endif %}

	{% endif %}

	_proc_end function=_SetDynamicPA

#--------------------------------------------------------------------

[gcode_macro SET_PRESSURE_ADVANCE]
description: wrapper for FW proc
# default is set in _steppers_printer.cfg in [extruder] section
rename_existing: _SET_PRESSURE_ADVANCE_STOCK
# variable_blah: xxx
gcode:
	_proc_start function=SET_PRESSURE_ADVANCE func_params='"{rawparams|string}"'
	{% if printer["gcode_macro _linadv_vars"].linadv_verb_codeflow %} M118 >>> SET_PRESSURE_ADVANCE Start ... {% endif %}

	_SET_PRESSURE_ADVANCE_STOCK {rawparams}

	{% if printer["gcode_macro _linadv_vars"].linadv_verb_codeflow %} M118 ... SET_PRESSURE_ADVANCE End <<< {% endif %}
	_proc_end function=SET_PRESSURE_ADVANCE

