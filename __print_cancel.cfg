#####################################################################
# 	CANCEL_PRINT + ERCF adaptations
#	largely harmonized with PRINT_END procs
# (CANCEL_PRINT moved to userWrap_pause_resume.cfg)
#####################################################################

[delayed_gcode __print_cancel_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=__print_cancel_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=__print_cancel
	_proc_end function=__print_cancel_loaded

#--------------------------------------------------------------------

[gcode_macro _info__print_cancel]
gcode:

# user config to wrap FW procs constained in homing.cfg

#--------------------------------------------------------------------

[gcode_macro __print_cancel_vars]
description: macro for __print_cancel variables

gcode:

	_proc_start function=__print_cancel_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=__print_cancel_vars

#--------------------------------------------------------------------

[delayed_gcode __print_cancel_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=__print_cancel_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module__print_cancel_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=__print_cancel_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=__print_cancel_module_start

#--------------------------------------------------------------------

[gcode_macro _print_canx_ui_cooldown]
gcode:

	_proc_start function=_print_canx_ui_cooldown func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object

	{% if params.UI_INPUT == YES or
		 params.UI_INPUT == 'YES' or
		 params.UI_INPUT == "YES" or
		 params.UI_INPUT == '"YES"' %}
		M118 Heaters to be turned off.
#		TURN_OFF_HEATERS
		save_variable VARIABLE=print_canx_cool VALUE=1 	# needed for _print_canx_summary
	{% else %}
		M118 Heaters to be left on.
		save_variable VARIABLE=print_canx_cool VALUE=0 	# needed for _print_canx_summary
	{% endif %}

	# added some logic here such that if filament isn't detected in toolhead, don't offer to unload, even if
	# unload passed. It just makes sense. Note that it's an edge case where if filament is in bowden but not
	# at toolhead when canceled - the user will just need to deal with those manually, ATT.
	{% if svv.module_ercf_loaded|int %}
		{% if svv.print_canx_unload and printer['filament_switch_sensor toolhead_sensor'].filament_detected != False %}
			# no need for an input prompt delay here...
			get_user_input PROMPT="Unload Filament? (YES/no):" RCVR_MACRO=_print_canx_ui_unload TO_PERIOD=30 TO_CYCL_DEF=0 TO_RESP_DEF="YES"
			# _print_canx_ui_unload chains to _print_canx_summary
		{% else %}
			{% if svv.print_canx_unload %}
				M118 Unload not offered - filament not detected in toolhead.
			{% endif %}
			_print_canx_summary
		{% endif %}
	{% else %}
		_print_canx_summary
	{% endif %}

	_proc_end function=_print_canx_ui_cooldown

#--------------------------------------------------------------------

[gcode_macro _print_canx_ui_unload]
gcode:

	_proc_start function=_print_canx_ui_unload func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	{% if params.UI_INPUT == YES or
		 params.UI_INPUT == 'YES' or
		 params.UI_INPUT == "YES" or
		 params.UI_INPUT == '"YES"' %}
		M118 Unloading Filament...
#fix: check for ercf module loaded??
		{% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
			SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0		#nix ercf encoder_sensor ops at end so unload doesn't trip a pause.
		{% endif %}
		{% if printer['filament_switch_sensor toolhead_sensor'].filament_detected == True %}
			SET_FILAMENT_SENSOR SENSOR=toolhead_sensor ENABLE=0		#nix ercf toolhead_sensor ops at end so unload doesn't trip a pause.
			ERCF_EJECT FINAL=1
		{% else %}
			# unload here via unknown
			SET_FILAMENT_SENSOR SENSOR=toolhead_sensor ENABLE=0		#nix ercf toolhead_sensor ops at end so unload doesn't trip a pause.
			ERCF_EJECT_UNKNOW_STATE
		{% endif %}
		M118 Filament unloaded.
	{% else %}
		M118 Filament load retained.
	{% endif %}

	_print_canx_summary

	_proc_end function=_print_canx_ui_unload

#--------------------------------------------------------------------

[gcode_macro _print_canx_summary]
gcode:

	_proc_start function=_print_canx_summary func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object

	{% if svv.print_canx_cool %}
		M141 S40														# set chamber temp to 40 to help cool it down
		TURN_OFF_HEATERS
	{% else %}
		M118 Heaters remain on.
	{% endif %}

	# emit dialog in console/on lcd
	{% if 1 %}
		{% if svv.module_ercf_loaded %}
			{% if svv.ercf_swaps_last_canx_print > 1 %}
				M118 { ">>> Print Cancelled - " ~ svv.ercf_swaps_last_canx_print ~ " swaps with " ~ svv.ercf_interactions ~ " interactions. <<<" }
				M117 Done - {svv.ercf_swaps_last_canx_print} swaps
			{% else %}
				{% if svv.ercf_interactions %}
					M118 { ">>> Print Cancelled - " ~ svv.ercf_swaps_last_canx_print ~ " swaps with 1 interactions. <<<" }
				{% else %}
					M118 { ">>> Print Cancelled - " ~ svv.ercf_swaps_last_canx_print ~ " swaps with no interactions. <<<" }
				{% endif %}
				M117 Done - {svv.ercf_swaps_last_canx_print} swap
			{% endif %}
		{% else %}
			M117 Print Cancelled
			say_nc S="Cancelled"

		{% endif %}
	{% endif %}

	_proc_end function=_print_canx_summary

#--------------------------------------------------------------------

