#####################################################################
# 	CANCEL_PRINT + ERCF adaptations
#####################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running or paused print
rename_existing: _CANCEL_PRINT_STOCK
gcode:
	# this proc gets entered when a print is cancelled from printing OR when cancelled from pause
	# so need to logically assess moving Z before (if printing) or after XY (if paused)

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object
	
	######################### debug stuffs
#	{% if svv.module_debug_loaded %} _enable_trace_debug REASON='"blah"' {% endif %}
#	{% if svv.module_debug_loaded %} _enable_gmove_debug REASON='"blah"' {% endif %}
#	{% if svv.module_debug_loaded %} _enable_save_var_debug REASON='"blah"' {% endif %}

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=CANCEL_PRINT func_params='"{rawparams|string}"'  {% endif %}

	{% set th = printer.toolhead %}									# set context for printer.toolhead object

	{% set canx_entry_ptr_state = svv.last_ptr_state %}					# store state for conditional use later herein
	{% if printer["gcode_macro _printer_vars"].ptr_verb_debug %} M118 _____ CANCEL_PRINT | canx_entry_ptr_state: {canx_entry_ptr_state} _____ {% endif %}
	
	{% if printer["gcode_macro _printer_vars"].ptr_verb_status %}
		M118 >>> Canceling Print <<<
	{% endif %}
	
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_canceling"'	# machine state save

	stop_pause_alarm						   						# in event canx called from pause, shut the beeping down

	M300 P10 S3000						   							# play
	M300 P10 S2000						   							# 	descending
	M300 P10 S1000						   							#		tone
	M106 S26														# force small breeze across duct mounted chamber temp sensor

	{% if svv.module_ercf_loaded %}
		SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
		{% if printer['filament_switch_sensor toolhead_sensor'].filament_detected == True %}
			ERCF_EJECT FINAL=1
		{% endif %}
	{% endif %}

	{% if svv.module_ledeff_loaded %}
		_set_ledeff_mode CHAIN=chamber_lights	EFFECT=normal			# use LED_EFFECTS code
		_set_ledeff_mode CHAIN=lcd_lights 	EFFECT=normal			# use LED_EFFECTS code
		# _set_ledeff_mode CHAIN=ercf_lights	EFFECT=off				# use LED_EFFECTS code
		# _set_ledeff_mode CHAIN=dash_lights	EFFECT=off				# use LED_EFFECTS code
	{% else %}
		ChLts_Normal												# use Klipper Dotstar code
		LcdLts_Normal												# use Klipper Neopixel code
		# ERCFLts_off													# use Klipper Neopixel code
		# DBLts_off													# use Klipper Neopixel code
	{% endif %}

	TURN_OFF_HEATERS						   						# so we've canx'd the print, might as well start to cool it down
	CLEAR_PAUSE						   								# reset the fw's pause state, in case canx called from pause
	SDCARD_RESET_FILE						   						# reset the fw's file state

	_park_head ENTRY='{canx_entry_ptr_state|string}'
	# _park_head ENTRY='print_cancelling'

	_CANCEL_PRINT_STOCK												# chain to klipper fw print canx stuffs

	_HOURMETER_OFF						   							# so we're not printing, stop accumulating print hours
	_PrintLED_Off						   							# restore previous switch led state

	SAVE_VARIABLE VARIABLE=final_maxz VALUE={svv.maxz}				# clear saved print dims
	SAVE_VARIABLE VARIABLE=maxz VALUE=0.0							# clear saved print height 
	SAVE_VARIABLE VARIABLE=has_wipe_tower VALUE=-1					# print state initialization
	SAVE_VARIABLE VARIABLE=v2_2526_slicer_check VALUE='"NULL"'		# clear slicer check val to enable later update/check
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_canceled"'	# save the machine state
	SAVE_VARIABLE VARIABLE=last_saved_gcode_state VALUE='"NULL"'

	# emit dialog in console/on lcd
#	{% if printer["gcode_macro _printer_vars"].ptr_verb_info %}

	{% if 1 %}
		{% if svv.module_ercf_loaded %}
			M118 { ">>> Print canceled after " ~ svv.ercf_swaps ~ " swaps. <<<" }
			M117 Canx - {svv.ercf_swaps} swaps.
		{% else %}
			M118 >>> Print Canceled <<<
			M117 Print Canceled
		{% endif %}
	{% endif %}
	
 	snd_PrintCancel													# play the cancel sound/song

	SAVE_VARIABLE VARIABLE=ercf_swaps_last_canx_print VALUE={svv.ercf_swaps}	# save current swaps
	SAVE_VARIABLE VARIABLE=ercf_swaps VALUE=0									# clear swap

	######################### debug stuffs
#	{% if svv.module_debug_loaded %} _disable_save_var_debug {% endif %}	# make sure svv debug off
#	{% if svv.module_debug_loaded %} _disable_gmove_debug {% endif %}
#	{% if svv.module_debug_loaded %} _disable_trace_debug {% endif %}

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=CANCEL_PRINT {% endif %}

