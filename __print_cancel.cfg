#####################################################################
# 	CANCEL_PRINT + ERCF adaptations
#####################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running or paused print
rename_existing: CANCEL_PRINT_BASE
gcode:
	M118 Canceling Print
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_canceling"'	# machine state save
	
	stop_pause_alarm						   						# in event canx called from pause, shut the beeping down

	M300 P10 S3000						   							# play
	M300 P10 S2000						   							# 	descending
	M300 P10 S1000						   							#		tone
	M106 S26														# force small breeze across duct mounted chamber temp sensor

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object
	{% set th = printer.toolhead %}									# set context for printer.toolhead object
	
	{% if svv.module_ercf_loaded %}
		SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
	{% endif %}

	{% if svv.module_led_effect_loaded %}
		set_light_mode CHAIN=chamber_lights	EFFECT=normal			# use LED_EFFECTS code
		set_light_mode CHAIN=lcd_lights 	EFFECT=normal			# use LED_EFFECTS code
		set_light_mode CHAIN=ercf_lights	EFFECT=off				# use LED_EFFECTS code
		set_light_mode CHAIN=dash_lights	EFFECT=off				# use LED_EFFECTS code
	{% else %}
		ChLts_Normal												# use Klipper Dotstar code
		LcdLts_Normal												# use Klipper Neopixel code
		ERCFLts_off													# use Klipper Neopixel code
		DBLts_off													# use Klipper Neopixel code
	{% endif %}

	TURN_OFF_HEATERS						   						# so we've canx'd the print, might as well start to cool it down
	CLEAR_PAUSE						   								# reset the fw's pause state, in case canx called from pause
	SDCARD_RESET_FILE						   						# reset the fw's file state
		
	# these are for absolute X/Y movement
	{% set x_park = th.axis_maximum.x//2|float %}					# lateral center
	{% set y_park = th.axis_maximum.y|float %}						# max y
	
	# this are calculations to arrive at a relative Z movement - seems Rube Goldbergish, but meh, so am I
	# in reality, in case of one at a time print modes, actual current height might not be the highest
	
	{% set max_z = th.axis_maximum.z|float %}						# get maximum Z axis machine limit
	{% set act_z = th.position.z|float %}							# get actual Z axis position
	
	{% if act_z < (max_z - 20.0) %}									# check to ensure we're not going to exceed max Z when lifting
		{% set max_deltaz = 20.0 %}									# and if OK, then set the relative val to the max lift value
	{% else %}														# otherwise
		{% set max_deltaz = max_z - act_z %}						# set the (relative) value to ensure we stop at max z
	{% endif %}

	{% set tgt_deltaz = svv.maxz|float + 10.0 - act_z %}			# typical safe is 10mm above highest printed part
	
	{% set min_deltaz = svv.maxz|float + 1.0 - act_z %}				# min safe is 1mm above highest printed part

	{% if tgt_deltaz > max_deltaz %}								# do the checks
		{% set final_deltaz = min_deltaz %}									# and set the final z move needed
	{% else %}
		{% set final_deltaz = tgt_deltaz %}									# dependant on print, limits, and max/min/targets
	{% endif %}

	go_relative														# go relative
	G1 Z{final_deltaz} F900											# and move up to the safe height
	go_absolute														# go absolute
	G0 X{x_park} Y{y_park} F6000									# and move to absolute XY
	
	CANCEL_PRINT_BASE												# chain to klipper fw print canx stuffs

	_HOURMETER_OFF						   							# so we're not printing, stop accumulating print hours
	_PrintLED_Off						   							# restore previous switch led state
	SAVE_VARIABLE VARIABLE=maxz VALUE='"0.0"'						# clear saved print height
	SAVE_VARIABLE VARIABLE=v2_2526_slicer_check VALUE='"NULL"'		# clear slicer check val to enable later update/check
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_canceled"'	# save the machine state

	# emit dialog in console/on lcd
	{% if svv.module_ercf_loaded %}
		{ action_respond_info("Print canceled after " + printer["gcode_macro PRINT_START"].swapcounter|string + " swaps." ) }
		M117 Canx - {printer["gcode_macro PRINT_START"].swapcounter|string} swaps.
	{% else %}
		M118 Print Canceled
		M117 Print Canceled
	{% endif %}
	
 	snd_PrintCancel													# play the cancel sound/song
