###############################################################

[delayed_gcode _pico_oled_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_pico_oled_loaded func_params='"{rawparams|string}"'  
	{% if printer["gcode_macro _printer_vars"].ptr_verb_cfgload %} 
		M118 >>> _pico_oled.cfg Loaded. <<<
	{% endif %}
	_proc_end function=_pico_oled_loaded 

[mcu pico_oled]
serial: /dev/serial/by-id/usb-Klipper_rp2040_Pico_Display-if00
restart_method: command

[display pico_oled]
#[display]

# mcu defined in _mcus.cfg...  <-- LOOK
lcd_type: sh1106
i2c_mcu: pico_oled
i2c_bus: i2c0a
# Set the direction of the encoder wheel
#   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
## encoder_pins: ^pico_oled:gpio4, ^pico_oled:gpio5
## click_pin: ^!pico_oled:gpio3
## kill_pin: ^!pico_oled:gpio15
#   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise) scrolls down or increases values.
#encoder_pins: ^pico_oled:PA4, ^pico_oled:PA3
x_offset: 2
#   Use X offset to shift the pico_oled towards the right. Value can be 0 to 3
#vcomh: 0
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your pico_oled. (31 seems to be a good value)
# invert: False

[neopixel displayStatus]
pin: pico_oled:gpio2
chain_count: 1
color_order: GRB
initial_RED: 0.2
initial_GREEN: 0.05
initial_BLUE: 0

###############################################################

[output_pin _pico_oled_spkr_pin]
#####################################################################
# 	Pico OLED Display 'Speaker 'Control
#####################################################################

pin: pico_oled:gpio22	#   Beeper pin. This parameter must be provided.
pwm: True			#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0			#   Silent at power on, set to 1 if active low.
shutdown_value: 0	#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.024	#   Default PWM frequency set in M300 Macro: 0.001 = 1ms will give a tone of 1kHz, although not pitch perfect.


[delayed_gcode _pico_oled_start]
#description: Sets module-specific state flags for conditional use elsewhere.
initial_duration: 1.0							# have this at 0.5s as init code in _startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_pico_oled_start func_params='"{rawparams|string}"'  
 	{% if printer["gcode_macro _printer_vars"].ptr_verb_modload %}  M118 >>> _pico_oled_start Start <<< {% endif %}

	save_variable VARIABLE=pico_oled_present 			VALUE=1

	{% if printer["gcode_macro _printer_vars"].ptr_verb_modload %}  M118 >>> _pico_oled_start End <<< {% endif %}
	_proc_end function=_pico_oled_start 
