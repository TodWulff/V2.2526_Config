#####################################################################
# 	PRINT_END
#####################################################################

[gcode_macro PRINT_END]
variable_retract_temp_min:	  180			 # Minimum nozzle temperature to permit a retract. Otherwise, purge will not occur.
variable_print_end_scrub:		0
gcode:
	{% set svv = printer.save_variables.variables %}				# set context for save_variables object
	{% set th = printer.toolhead %}									# set context for printer.toolhead object
	
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_ending"'	# machine state save
	# M118 print_ending

	# safe anti-stringing print-end wipe coords
	{% set x_safe = th.position.x + 5 * (1 if th.axis_maximum.x - th.position.x > 5 else -1) %}
	{% set y_safe = th.position.y + 5 * (1 if th.axis_maximum.y - th.position.y > 5 else -1) %}
	{% set z_safe = [svv.maxz + 1, th.axis_maximum.z]|min %}		# because, OAAT/SEQ context
	
	SAVE_GCODE_STATE NAME=STATE_PRINT_END

	M400															# wait for buffer to clear
	G92 E0															# zero the extruder
	
	{% if printer.extruder.temperature >= retract_temp_min %}
		G1 E-0.4 F3600					   # retract filament
	{% else %} 
		RESPOND MSG="No Retract due to Low Temp..."
	{% endif %}

	absolute									# absolute positioning
	G0 X{x_safe} Y{y_safe} Z{z_safe} F15000		# move nozzle to remove stringing
	
	{% set z_safe = [svv.maxz + 15, th.axis_maximum.z]|min %}
	G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y} Z{z_safe} F15000  # park nozzle at center rear

	## CAUTION!!!  THIS FORCES A NOZZLE SCRUB AT THE END OF THE PRINT, WITH THE MODEL STILL ON THE BED
	# BE REALLY FUKIN CAREFUL AND KNOW WHAT IS GOING ON BEFORE ENABLING THIS...
	# And having shortened slicer's print bed enough so that no model ever gets printed on back where TH
	# could strike it during nozzle scrubs.  Also, if doing between mesh scrubs (i.e. OAAT/SEQ mode), be
	# sure to have the logic to elevate to (tallest model z-height (slicer passes maxz) before and after each.
	# Still a wip atm, but is close to being safe and robust (30Jan22).

	{% if print_end_scrub %}
		G0 Z15 F1500  # drop down to pre-scrub
		CLEAN_NOZZLE DX={th.axis_maximum.x//2|float}  DY={th.axis_maximum.y|float}  DZ=15.0
	{% endif %}

	{% if params.UNLOAD|default(0)|int %}
		ERCF_EJECT
	{% endif %}

	M107									  # turn off part cooling fan

	_HOURMETER_OFF
	_PrintLED_Off

	RESTORE_GCODE_STATE NAME=STATE_PRINT_END

	M117 Print Completed
	M220 S100														# set feedrate percentage to default
	M221 S100														# set speed percentage to default
	M106 S26														# forces small breeze across duct mounted chamber temp sensor
	M141 S40														# set chamber temp to 40 to help cool it down

	TURN_OFF_HEATERS						   						# so we've completed the print, might as well start to cool it down
	CLEAR_PAUSE						   								# reset the fw's pause state
	SDCARD_RESET_FILE						   						# reset the fw's file state

	M300 P10 S1000		# sound off print complete
	M300 P10 S2000
	M300 P10 S3000
	# snd_PrintEnd

	{% if svv.module_led_effect_loaded %}
		set_light_mode CHAIN=chamber_lights	EFFECT=normal	RESET=1		# uses LED_EFFECTS code
		set_light_mode CHAIN=lcd_lights 	EFFECT=normal	RESET=1		# uses LED_EFFECTS code
		set_light_mode CHAIN=ercf_lights	EFFECT=off		RESET=1		# uses LED_EFFECTS code
		set_light_mode CHAIN=dash_lights	EFFECT=off		RESET=1		# uses LED_EFFECTS code
	{% else %}
		ChLts_Normal		# set chamber lights to normal	- uses Klipper Dotstar code
		LcdLts_Normal		# set lcd lights to normal		- uses Klipper Neopixel code
		ERCFLts_off			# set ercf lights to normal		- uses Klipper Neopixel code
		DBLts_off			# set dash lights to normal		- uses Klipper Neopixel code
	{% endif %}

	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_ended"'	# machine state save
	SAVE_VARIABLE VARIABLE=maxz VALUE='"0.0"'					# clear saved print dims
	SAVE_VARIABLE VARIABLE=v2_2526_slicer_check VALUE='"NULL"'	# clear SLICER VITALS
	# M118 print_ended
	
	# emit dialog in console/on lcd
	{% if svv.module_ercf_loaded %}
		{ action_respond_info("Final Swap Count: " + printer["gcode_macro PRINT_START"].swapcounter|string + " swaps." ) }
		M117 Done - {printer["gcode_macro PRINT_START"].swapcounter|string} swaps.
	{% else %}
		M118 Print Complete
		M117 Print Complete
	{% endif %}

	printer_config_backup
