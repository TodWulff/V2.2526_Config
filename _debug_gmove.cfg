#####################################################################
# _debug_gmove 
# (G0/G1 moved to userWrap_gcode_move.cfg)
# (G10/G11 moved to userWrap_firmware_retraction.cfg)
# (G4 moved to userWrap_toolhead.cfg)
# (M220/M221 moved to userWrap_gcode_move.cfg)
#####################################################################

[delayed_gcode _debug_gmove_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_debug_gmove_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_debug_gmove
	_proc_end function=_debug_gmove_loaded

#--------------------------------------------------------------------

[gcode_macro _info_debug_gmove_macros]
gcode:

# todo - write up on module's purpose/function/implementation/use
# see user_interaction for an example of intended use

#--------------------------------------------------------------------

[gcode_macro _debug_gmove_vars]
description: macro for _debug_gmove variables

gcode:

	_proc_start function=_debug_gmove_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_debug_gmove_vars

#--------------------------------------------------------------------

[delayed_gcode _debug_gmove_module_start]
#description: Inits state flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_debug_gmove_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_debug_gmove_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_debug_gmove_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_debug_gmove_module_start

#--------------------------------------------------------------------

[gcode_macro _enable_debug_gmove]
description: used to enable gmove debug
gcode:

	_proc_start function=_enable_debug_gmove func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
		log_gmove S=">>>>> _enable_debug_gmove <<<<<"
	{% endif %}
	
	say S="Gmove Trace Enabled"

	_proc_end function=_enable_debug_gmove

#--------------------------------------------------------------------

[gcode_macro _disable_debug_gmove]
description: used to disable gmove debug
gcode:

	_proc_start function=_disable_debug_gmove func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
		log_gmove S=">>>>> _disable_debug_gmove <<<<<"
	{% endif %}
	
	say S="Gmove Trace Disabled"

	_proc_end function=_disable_debug_gmove
	
	SET_GCODE_VARIABLE MACRO=_debug__tools_vars VARIABLE=debug_gmove VALUE=0

#--------------------------------------------------------------------

[gcode_macro enable_debug_gmove]
gcode:

	_proc_start function=enable_debug_gmove func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	
	# there is a method to the madness - pretty macro button names and
	# state visibility before calling _enable_blah macro for logging purposes
	SET_GCODE_VARIABLE MACRO=_debug__tools_vars VARIABLE=debug_gmove VALUE=1

	_enable_debug_gmove

	_proc_end function=enable_debug_gmove

#--------------------------------------------------------------------

[gcode_macro disable_debug_gmove]
gcode:

	_proc_start function=disable_debug_gmove func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_disable_debug_gmove

	_proc_end function=disable_debug_gmove

#--------------------------------------------------------------------

