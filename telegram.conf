## https://github.com/nlef/moonraker-telegram-bot

[bot]
server: localhost

chat_id: -778769703
bot_token: 5082203367:AAHFrZtMVX3rLpaIYBy0VyAzT63HuY6Vzp0

log_path: /home/pi/klipper_logs
heaters: extruder, heater_bed
sensors: Chamber, Exhaust, PS_Fab, MCU_Fan, Host #, ..., ...
power_device: Printer

[camera]
flipVertically: false
flipHorizontally: false
videoDuration: 30

[progress_notification]
percent: 25
height: 10
time: 60
min_delay_between_notifications: 60

[timelapse]
cleanup: true
height: 0.2
time: 30
target_fps: 30	

# [bot]
# server: localhost
#	This is the adress, where the moonraker of the desired printer is located at. 
#	In most cases it will be 'localhost'. Alternatively, an ip:port, as in 192.168.0.19:7125 can be entered, 
#	if you are running multiple moonraker instances on the machine, or if the bot is located not on the printer itself.
# bot_token: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#	This is the bot token, the most important part of every bot. 
#	You get it when you create a new bot. To create a new bot, you have to talk to @BotFather in telegram. 
#	The only thing you need is the token, the rest is taken care of by the chat_id.
#	Only the chat with the correct chat_id can send/receive commands to the bot.
# chat_id: xxxxxxxxx
#	This is the ID of the chat, where the bot is supposed to be able to send updates to. 
#	To get the ID, after creating a new bot write something to this bot, then navigate to 
#	https://api.telegram.org/bot<bot_token>/getUpdates you will see json with information about your message, sent to the bot. 
#	Find chat_id there.
#socks_proxy: 192.168.0.22:1080
#	If needed, you can configure the bot to use a socks5 proxy. 
#user: root
#	If you have moonraker authorization enabled, you can enter the user and password here.
#	My advice is to not expose your printer to the internet, but I am not your mother.
#password: qwerty
#	The password is stored in plain text.
#light_device: leds
#	This is the power device in moonraker, to which the lights of the printer/chamber are connected to.
#	If you do not have lights/have no need to cycle them, skip this parameter.
#	Default is to omit this.
#power_device: power
#	This is the power device in moonraker, to which the power of the printer slave boards are connected to.
#	A typical usage scenario is to shutdown power to the MCUs, but not to disable the host on which klipper is running.
#	If you do not have such a setup, skip this.
#	Default is to omit this.
#debug: true
#	This enables extensive logging. Only use it for debugging/troubleshooting.
#	Default is to omit this/false.
#log_path: /tmp
#	You can change the path for the logfiles. The default behaviour is to place them under /tmp.
#	On a typical installation this would mean, that logs get cleared on a reboot.
#	You can choose another location, if needed.
#eta_source: slicer
#	You can choose, which value to use for remaining time estimation.
#	Values avaliable: slicer, file
#	Default value is slicer.
#sensors: mcu, ..., ...
#	You can add temperature sensors, like the "mcu" sensor to be displayed in the status message. 
#	Simply enter the names from your klipper config, separated by commas.
#	Default is not to display any additional temperature sensors.
#heaters: extruder, heater_bed
#	You can add heaters, like the extruder, or the bed to be displayed in the status message. 
#	Simply enter the names from your klipper config, separated by commas.
#	Default is not to display any additional heaters. 