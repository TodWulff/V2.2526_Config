#####################################################################
# 	_debug_userlogs 
#####################################################################
# instantiate 1+ log files so user can log printer events thereto.
# will employ logrotate daemon to support programmatic rollover, etc.

[delayed_gcode _debug_userlogs_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_debug_userlogs_loaded func_params='"{rawparams|string}"'
	_module_loaded MODULE=_debug_userlogs
	_proc_end function=_debug_userlogs_loaded

#--------------------------------------------------------------------

[gcode_macro _info_debug_userlogs]
gcode:

# todo - write up on module's purpose/function/implementation/use
# see user_interaction for an example of intended use

#in user macros, affect a log entry by use of the kulog command
#log_gmove S="G0 {rawparams|upper}"
#ulog log_file S="log entry"		
	
#--------------------------------------------------------------------

[gcode_macro _debug_userlogs_vars]
description: macro for _debug_userlogs variables

gcode:

	_proc_start function=_debug_userlogs_vars func_params='"{rawparams|string}"'

	# there is none, this is for module variable use only

	_proc_end function=_debug_userlogs_vars

#--------------------------------------------------------------------

[delayed_gcode _debug_userlogs_module_start]
#description: Sets module-specific state flags for conditional use elsewhere.
initial_duration: 0.5							# have this at 0.5s as init code in _startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_debug_userlogs_module_start func_params='"{rawparams|string}"'

	SAVE_VARIABLE VARIABLE=module_debug_userlogs_loaded VALUE=1					#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_debug_userlogs_err_flag VALUE=0						#init error flag via persistent variable that this module is not in error

	_proc_end function=_debug_userlogs_module_start
	
#--------------------------------------------------------------------

[gcode_shell_command gmove_debug_log]
command: log_debug_gmove_event
verbose: False

#--------------------------------------------------------------------
[gcode_shell_command trace_debug_log]
command: log_debug_trace_event
verbose: False

#--------------------------------------------------------------------
[gcode_shell_command svv_debug_log]
command: log_debug_svv_event
verbose: False

#--------------------------------------------------------------------
[gcode_shell_command state_debug_log]
command: log_debug_state_event
verbose: False

#--------------------------------------------------------------------
[gcode_macro log_gmove]
gcode:

	_proc_start function=log_gmove func_params='"{rawparams|string}"'

	RUN_SHELL_CMD CMD=gmove_debug_log PARAMS='{params.S}'

	_proc_end function=log_gmove

#--------------------------------------------------------------------
[gcode_macro log_trace]
gcode:

# RECURSION	... 	_proc_start function=log_trace func_params='"{rawparams|string}"'

	RUN_SHELL_CMD CMD=trace_debug_log PARAMS='{params.S}'

# RECURSION	... 	_proc_end function=log_trace

#--------------------------------------------------------------------
[gcode_macro log_svv]
gcode:

	_proc_start function=log_svv func_params='"{rawparams|string}"'

	RUN_SHELL_CMD CMD=svv_debug_log PARAMS='{params.S}'

	_proc_end function=log_svv

#--------------------------------------------------------------------
[gcode_macro log_state]
gcode:

	_proc_start function=log_state func_params='"{rawparams|string}"'

	RUN_SHELL_CMD CMD=state_debug_log PARAMS='{params.S}'

	_proc_end function=log_state

#--------------------------------------------------------------------
[gcode_shell_command user_log_rotate]
#command: sudo logrotate -v -f /etc/logrotate.d/klipper_userlogs
command: sh /home/pi/printer_data/config/rotate_klipper_userlogs.sh
timeout: 60
verbose: True

#--------------------------------------------------------------------

[gcode_macro rotate_debug_logs]
gcode:

	_proc_start function=rotate_debug_logs func_params='"{rawparams|string}"'

	RUN_SHELL_CMD CMD=user_log_rotate

	_proc_end function=rotate_debug_logs

#--------------------------------------------------------------------


