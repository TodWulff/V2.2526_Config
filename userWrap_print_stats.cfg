#####################################################################
# _userWrap_print_stats
#####################################################################

[delayed_gcode _userWrap_print_stats_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_print_stats_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_print_stats
	_proc_end function=_print_stats_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_print_stats]
gcode:

# user config to wrap FW procs constained in print_stats.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_print_stats_vars]
description: macro for _print_stats variables

gcode:

	_proc_start function=_print_stats_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_print_stats_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_print_stats_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_print_stats_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_print_stats_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_print_stats_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_print_stats_module_start

#--------------------------------------------------------------------

[gcode_macro SET_PRINT_STATS_INFO]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _SET_PRINT_STATS_INFO_STOCK
gcode:

	_proc_start function=SET_PRINT_STATS_INFO func_params='""{rawparams|string}""'

	_SET_PRINT_STATS_INFO_STOCK {rawparams}

	_proc_end function=SET_PRINT_STATS_INFO

#--------------------------------------------------------------------


