#----------------------------------------------------------------------------------

[delayed_gcode clear_display]		# description: Delayed macro to be called to clear the M117 portion of the display
gcode:
  M117
  
#----------------------------------------------------------------------------------

[delayed_gcode welcome_msg]			# description: Displays 'welcome!' via a M117 call
gcode:
  M117 Welcome!
  UPDATE_DELAYED_GCODE ID=clear_display DURATION=10  # clear display in 10s

#----------------------------------------------------------------------------------

[delayed_gcode _startup_var_init]		# description: initializes schtuffs
initial_duration: 0.1					# run it very quickly after start - other module autostarts are set to 0.5s
gcode:
	
	SAVE_VARIABLE VARIABLE=module_led_effect_loaded VALUE=0			# module state initialization
	SAVE_VARIABLE VARIABLE=module_ercf_loaded VALUE=0				# module state initialization
	
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"initializing"'	# machine state save
	
	SAVE_VARIABLE VARIABLE=maxz VALUE='"0.0"'						# init global var
	SAVE_VARIABLE VARIABLE=z_axis_cal VALUE=0						# since machine just started, flag a z_axis_cal is not complete
	SAVE_VARIABLE VARIABLE=v2_2526_slicer_check VALUE='"NULL"'		# clear SLICER VITALS

	# ##workaround required to get the save vars of a '"{integer}"' - must init as a string, seemingly...
	# SAVE_VARIABLE VARIABLE=right_ledbar_start VALUE='"NULL"'
	# SAVE_VARIABLE VARIABLE=right_ledbar_end   VALUE='"NULL"'
	# SAVE_VARIABLE VARIABLE=right_ledbar_range VALUE='"NULL"'

	# SAVE_VARIABLE VARIABLE=front_ledbar_start VALUE='"NULL"'
	# SAVE_VARIABLE VARIABLE=front_ledbar_end   VALUE='"NULL"'
	# SAVE_VARIABLE VARIABLE=front_ledbar_range VALUE='"NULL"'

	# SAVE_VARIABLE VARIABLE=left_ledbar_start VALUE='"NULL"'
	# SAVE_VARIABLE VARIABLE=left_ledbar_end   VALUE='"NULL"'
	# SAVE_VARIABLE VARIABLE=left_ledbar_range VALUE='"NULL"'

	# SAVE_VARIABLE VARIABLE=rear_ledbar_start VALUE='"NULL"'
	# SAVE_VARIABLE VARIABLE=rear_ledbar_end   VALUE='"NULL"'
	# SAVE_VARIABLE VARIABLE=rear_ledbar_range VALUE='"NULL"'

	# ##Init LED pointers
	# SAVE_VARIABLE VARIABLE=right_ledbar_start VALUE='"0"'
	# SAVE_VARIABLE VARIABLE=right_ledbar_end   VALUE='"54"'

	# SAVE_VARIABLE VARIABLE=front_ledbar_start VALUE='"55"'
	# SAVE_VARIABLE VARIABLE=front_ledbar_end   VALUE='"114"'

	# SAVE_VARIABLE VARIABLE=left_ledbar_start  VALUE='"115"'
	# SAVE_VARIABLE VARIABLE=left_ledbar_end    VALUE='"168"'
	
	# SAVE_VARIABLE VARIABLE=rear_ledbar_start  VALUE='"169"'
	# SAVE_VARIABLE VARIABLE=rear_ledbar_end    VALUE='"228"'

	# ##set led related variables for later use in _chamber_lights.cfg
    # {% set svv = printer.save_variables.variables %}
	
	# had to have these below all the assignments as an immediate reference post assignment would return NULL...
	# SAVE_VARIABLE VARIABLE=right_ledbar_range VALUE='"{ svv.right_ledbar_start + "-" + svv.right_ledbar_end }"'
	# SAVE_VARIABLE VARIABLE=front_ledbar_range VALUE='"{ svv.front_ledbar_start + "-" + svv.front_ledbar_end }"'
	# SAVE_VARIABLE VARIABLE=left_ledbar_range  VALUE='"{ svv.left_ledbar_start + "-" + svv.left_ledbar_end }"'
	# SAVE_VARIABLE VARIABLE=rear_ledbar_range  VALUE='"{ svv.rear_ledbar_start + "-" + svv.rear_ledbar_end }"'
	
    # Added this state variable during testing of ERCF
	SAVE_VARIABLE VARIABLE=ercf_selector_homed    VALUE='"0"'
	
	# init last values to prevent ambiguous states
	SAVE_VARIABLE VARIABLE=last_chamber_lights_effect	VALUE='"off"'
	SAVE_VARIABLE VARIABLE=last_dash_lights_effect		VALUE='"off"'
	SAVE_VARIABLE VARIABLE=last_ercf_lights_effect		VALUE='"off"'
	SAVE_VARIABLE VARIABLE=last_lcd_lights_effect		VALUE='"off"'

	# and we're init'd
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"initialized"'	# machine state save

#----------------------------------------------------------------------------------

[delayed_gcode printer_startup]		# description: Printer Boot 'Autoexec' script
initial_duration: 1.0
gcode:
	
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"starting"'	# machine state save
	
	ERCF_SERVO_UP # raise the servo arm - consider setting a known state here with ERCF.
	
    {% if printer.save_variables.variables.module_led_effect_loaded %}
		M118 >>> LED CONTROL: LED_EFFECT <<<
		set_light_mode CHAIN=chamber_lights EFFECT=normal	# uses LED_EFFECTS code
		set_light_mode CHAIN=lcd_lights EFFECT=normal		# uses LED_EFFECTS code
		set_light_mode CHAIN=ercf_lights EFFECT=off			# uses LED_EFFECTS code
		set_light_mode CHAIN=dash_lights EFFECT=off			# uses LED_EFFECTS code
	{% else %}
		M118 >>> LED CONTROL: KLIPPER <<<
		ChLts_Normal		# set chamber lights to normal	- uses Klipper Dotstar code
		LcdLts_Normal		# set lcd lights to normal		- uses Klipper Neopixel code
		ERCFLts_off			# set ercf lights to normal		- uses Klipper Neopixel code
		DBLts_off			# set dash lights to normal		- uses Klipper Neopixel code
	{% endif %}

	printer_config_restore			# will pull in updates and impute a restart if the master differs from the local repo

	M106 S26						# fan @ 10% to push air over duct thermistor
	UPDATE_DELAYED_GCODE ID=welcome_msg DURATION=5		# display Welcome Msg at startup + 2s

#	snd_PowerOn						# emit power on sound/song
	sng_startup						# play startup song

	_IdleLED_On						# illuminate idle led
	_PwrLED_Off						# and extinguish the off led
	
	RUN_SHELL_COMMAND CMD=set_cam_config
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"started"'	# machine state save


