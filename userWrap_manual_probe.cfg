#####################################################################
# _userWrap_manual_probe
#####################################################################

[delayed_gcode _userWrap_manual_probe_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_manual_probe_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_manual_probe
	_proc_end function=_manual_probe_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_manual_probe]
gcode:

# user config to wrap FW procs constained in manual_probe.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_manual_probe_vars]
description: macro for _manual_probe variables

gcode:

	_proc_start function=_manual_probe_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_manual_probe_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_manual_probe_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_manual_probe_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_manual_probe_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_manual_probe_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_manual_probe_module_start

#--------------------------------------------------------------------

[gcode_macro MANUAL_PROBE]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _MANUAL_PROBE_STOCK
gcode:

	_proc_start function=MANUAL_PROBE func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_MANUAL_PROBE_STOCK {rawparams}

	_proc_end function=MANUAL_PROBE

#--------------------------------------------------------------------

# [gcode_macro TESTZ]
# description: wrap FW proc for userLogging purposes
# RENAME_EXISTING: _TESTZ_STOCK
# gcode:
# 
# 	_proc_start function=TESTZ func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
# 
# 	_TESTZ_STOCK
# 
# 	_proc_end function=TESTZ

#--------------------------------------------------------------------

[gcode_macro Z_ENDSTOP_CALIBRATE]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _Z_ENDSTOP_CALIBRATE_STOCK
gcode:

	_proc_start function=Z_ENDSTOP_CALIBRATE func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_Z_ENDSTOP_CALIBRATE_STOCK {rawparams}

	_proc_end function=Z_ENDSTOP_CALIBRATE

#--------------------------------------------------------------------

# [gcode_macro Z_OFFSET_APPLY_DELTA_ENDSTOPS]
# description: wrap FW proc for userLogging purposes
# RENAME_EXISTING: _Z_OFFSET_APPLY_DELTA_ENDSTOPS_STOCK
# gcode:
# 
# 	_proc_start function=Z_OFFSET_APPLY_DELTA_ENDSTOPS func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
# 
# 	_Z_OFFSET_APPLY_DELTA_ENDSTOPS_STOCK
# 
# 	_proc_end function=Z_OFFSET_APPLY_DELTA_ENDSTOPS

#--------------------------------------------------------------------

[gcode_macro Z_OFFSET_APPLY_ENDSTOP]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _Z_OFFSET_APPLY_ENDSTOP_STOCK
gcode:

	_proc_start function=Z_OFFSET_APPLY_ENDSTOP func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_Z_OFFSET_APPLY_ENDSTOP_STOCK {rawparams}

	_proc_end function=Z_OFFSET_APPLY_ENDSTOP

#--------------------------------------------------------------------


