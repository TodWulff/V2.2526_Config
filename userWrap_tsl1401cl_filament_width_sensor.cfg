#####################################################################
# _userWrap_tsl1401cl_filament_width_sensor
#####################################################################

[delayed_gcode _userWrap_tsl1401cl_filament_width_sensor_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_tsl1401cl_filament_width_sensor_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_userWrap_tsl1401cl_filament_width_sensor
	_proc_end function=_tsl1401cl_filament_width_sensor_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_tsl1401cl_filament_width_sensor]
gcode:

# user config to wrap FW procs constained in homing.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_tsl1401cl_filament_width_sensor_vars]
description: macro for _tsl1401cl_filament_width_sensor variables

gcode:

	_proc_start function=_tsl1401cl_filament_width_sensor_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_tsl1401cl_filament_width_sensor_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_tsl1401cl_filament_width_sensor_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_tsl1401cl_filament_width_sensor_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_tsl1401cl_filament_width_sensor_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_tsl1401cl_filament_width_sensor_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_tsl1401cl_filament_width_sensor_module_start

#--------------------------------------------------------------------

[gcode_macro ClearFilamentArray]
description: wrap FW proc for userLogging purposes
rename_existing: _ClearFilamentArray_STOCK

gcode:
	_proc_start function=ClearFilamentArray func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	
	_ClearFilamentArray_STOCK {rawparams}			# debating with the other me if this should be above conditional...

	_proc_end function=ClearFilamentArray

#--------------------------------------------------------------------

[gcode_macro M405]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: M405.1
gcode:

	_proc_start function=M405 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	M405.1 {rawparams}

	_proc_end function=M405

#--------------------------------------------------------------------

[gcode_macro M406]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: M406.1
gcode:

	_proc_start function=M406 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	M406.1 {rawparams}

	_proc_end function=M406

#--------------------------------------------------------------------

[gcode_macro M407]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: M407.1
gcode:

	_proc_start function=M407 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	M407.1 {rawparams}

	_proc_end function=M407

#--------------------------------------------------------------------



#--------------------------------------------------------------------

