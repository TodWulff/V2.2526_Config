#####################################################################
# _userWrap_firmware_retraction
#####################################################################

[delayed_gcode _userWrap_firmware_retraction_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_firmware_retraction_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_userWrap_firmware_retraction
	_proc_end function=_firmware_retraction_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_firmware_retraction]
gcode:

# user config to wrap FW procs constained in firmware_retraction.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_firmware_retraction_vars]
description: macro for _firmware_retraction variables

gcode:

	_proc_start function=_firmware_retraction_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_firmware_retraction_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_firmware_retraction_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_firmware_retraction_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_firmware_retraction_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_firmware_retraction_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_firmware_retraction_module_start

#--------------------------------------------------------------------

[gcode_macro G10]
description: wrap FW proc for userLogging purposes
rename_existing: G10.1
gcode:
	_proc_start function=G10 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	
	{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
		{% set newparams = rawparams|upper|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")%}
		log_gmove S="G10 {newparams}"
	{% endif %}
	
	G10.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=G10

#--------------------------------------------------------------------

[gcode_macro G11]
description: wrap FW proc for userLogging purposes
rename_existing: G11.1
gcode:
	_proc_start function=G11 func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	
	{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
		{% set newparams = rawparams|upper|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")%}
		log_gmove S="G11 {newparams}"
	{% endif %}
	
	G11.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=G11

#--------------------------------------------------------------------

[gcode_macro GET_RETRACTION]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _GET_RETRACTION_STOCK
gcode:

	_proc_start function=GET_RETRACTION func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_GET_RETRACTION_STOCK {rawparams}

	_proc_end function=GET_RETRACTION

#--------------------------------------------------------------------

[gcode_macro SET_RETRACTION]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _SET_RETRACTION_STOCK
gcode:

	_proc_start function=SET_RETRACTION func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_SET_RETRACTION_STOCK {rawparams}

	_proc_end function=SET_RETRACTION

#--------------------------------------------------------------------


