# OK, this is really a bullshite approach (fixing a symptom)...  I'm fighting an issue w/ PS 1st layer solid infill
# over extrusion - perimeters are fukin perfect (as close to perfect as I can expect), but the infill is horridly over
# extruded - this attempts to see if I can overtly override it - called from _gcode_processing.cfg|_setslicervar macro.

[gcode_macro _ps_fstlyr_extrate_fix]
description: overtly apply a special ext rate to first layer's solid infill - _gcode_processing.cfg|_setslicervar
gcode:

	_proc_start function=_ps_fstlyr_extrate_fix func_params='"{rawparams|string}"'

	{% set svv = printer.save_variables.variables %}				# set eazy accesss context for save_variables object

	{% set line_type = params.lType|string|lower %}
	
	# turn "Internal infill", "Solid infill", "Top solid infill", and "Bridge infill" into "infill"
	{% set line_type = line_type|replace("top solid ","")|replace("solid ","")|replace("internal ","")|replace("bridge ","") %}

	#special ext rate override: layer 1 && 'infill' == set special ext factor. - fukin slicer specific fix...
	
	{% set trigger_linetype = printer["gcode_macro _gcodeproc_vars"].first_layer_linetype_trigger|lower %}
	{% set trigger_extfactor = printer["gcode_macro _gcodeproc_vars"].first_layer_si_ext_factor|float %}
	
	{% if line_type == trigger_linetype %} 
		SAVE_VARIABLE VARIABLE=last_fstlyr_extfactor VALUE='"{printer.gcode_move.extrude_factor|float}"'
		M221 S{(trigger_extfactor*100)|int}				# set EXTRUDER FEED RATE percentage to special ext rate
		GMOVE_LOG MSG='L1 ExtRate Override: {params.lType|string|lower} @ {(trigger_extfactor*100)|int}％'
	{% else %}
		M221 S{(svv.last_fstlyr_extfactor*100)|int}	# set EXTRUDER FEED RATE percentage to last ext rate
		GMOVE_LOG MSG='L1 ExtRate Restored: {params.lType|string|lower} @ {(svv.last_fstlyr_extfactor*100)|int}％'
	{% endif %}
		
	_proc_end function=_ps_fstlyr_extrate_fix
