#############################################################################
#   Startup Autoexec Procs
#############################################################################

[delayed_gcode clear_display]			# description: Delayed macro to be called to clear the M117 portion of the display
gcode:
  M117
  
#----------------------------------------------------------------------------------

[delayed_gcode welcome_msg]				# description: Displays 'welcome!' via a M117 call
gcode:
  M117 Welcome!
  UPDATE_DELAYED_GCODE ID=clear_display DURATION=10  # clear display in 10s

#----------------------------------------------------------------------------------

[delayed_gcode _startup_var_init]		# description: initializes schtuffs
initial_duration: 0.1					# run it very quickly after start - other module autostarts are set to 0.5s
gcode:

	_SAVE_VARIABLE_STOCK VARIABLE=proc_depth	VALUE=0			# resets in case printer hung last run and persistent var val is bad
																# this is the first thing to run after klipper is ready, so call organic vs. wrapper
															
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=_startup_var_init func_params='"{rawparams|string}"'  {% endif %}

	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"initializing"'	# machine state save

	SAVE_VARIABLE VARIABLE=module_ledeff_loaded VALUE=0				# module state initialization
	SAVE_VARIABLE VARIABLE=module_ercf_loaded VALUE=0				# module state initialization
	SAVE_VARIABLE VARIABLE=module_debug_loaded VALUE=0				# module state initialization
	SAVE_VARIABLE VARIABLE=module_linadv_loaded VALUE=0				# module state initialization
	SAVE_VARIABLE VARIABLE=module_scrub_loaded VALUE=0				# module state initialization
	SAVE_VARIABLE VARIABLE=module_klicky_loaded VALUE=0				# module state initialization
	SAVE_VARIABLE VARIABLE=module_gcodeproc_loaded VALUE=0			# module state initialization

	SAVE_VARIABLE VARIABLE=extruder_temp_setting VALUE=0			# stored extruder temp setting initialization
	SAVE_VARIABLE VARIABLE=heater_bed_temp_setting VALUE=0			# stored heater bed temp setting initialization
	
	SAVE_VARIABLE VARIABLE=ercf_he_temp_restore_val VALUE=0			# clear ercf temp setting cache

	SAVE_VARIABLE VARIABLE=maxz VALUE=0.0							# init global var
	SAVE_VARIABLE VARIABLE=has_wipe_tower VALUE=-1					# print state initialization
	SAVE_VARIABLE VARIABLE=z_axis_cal VALUE=0						# since machine just started, flag a z_axis_cal is not complete
	SAVE_VARIABLE VARIABLE=v2_2526_slicer_check VALUE='"NULL"'		# clear SLICER VITALS
	SAVE_VARIABLE VARIABLE=last_saved_gcode_state VALUE='"NULL"'

	SAVE_VARIABLE VARIABLE=ercf_selector_homed	VALUE=0				# Added this state variable during testing of ERCF
	SAVE_VARIABLE VARIABLE=ercf_he_temp_restore_val	VALUE=0
	
	; SAVE_VARIABLE VARIABLE=ercf_gear_direction	VALUE=0				# Added this state variable during testing of ERCF - set by manual_selector code
	; SAVE_VARIABLE VARIABLE=ercf_encoder_count	VALUE=0				# Added this state variable during testing of ERCF - set by encoder sensor gcodes

	# init other values to prevent ambiguous states
	SAVE_VARIABLE VARIABLE=last_chamber_lights_effect	VALUE='"off"'
	SAVE_VARIABLE VARIABLE=last_dash_lights_effect		VALUE='"off"'
	SAVE_VARIABLE VARIABLE=last_ercf_lights_effect		VALUE='"off"'
	SAVE_VARIABLE VARIABLE=last_lcd_lights_effect		VALUE='"off"'
	
	SAVE_VARIABLE VARIABLE=last_layer_chg_msg			VALUE='"NULL"'
	SAVE_VARIABLE VARIABLE=last_lcd_layer_chg_msg		VALUE='"NULL"'
	SAVE_VARIABLE VARIABLE=last_object_printed			VALUE='"NULL"'
	SAVE_VARIABLE VARIABLE=last_restored_gcode_state	VALUE='"NULL"'
	
	SAVE_VARIABLE VARIABLE=current_object_printed		VALUE='"NULL"'
	SAVE_VARIABLE VARIABLE=pause_ercf_error				VALUE=0
	SAVE_VARIABLE VARIABLE=type							VALUE='"NULL"'
	SAVE_VARIABLE VARIABLE=width						VALUE=0
	
	save_variable VARIABLE=total_toolchanges 			VALUE=0

	# and we're init'd
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"initialized"'	# machine state save

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=_startup_var_init {% endif %}

#----------------------------------------------------------------------------------

[delayed_gcode printer_startup]			# description: Printer Boot 'Autoexec' script
initial_duration: 2.0					# run 2 sec after boot to make sure other modules can load and run their startup procs before this
gcode:

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object

	######################### debug stuffs
	; {% if svv.module_debug_loaded %} _enable_trace_debug REASON='"Startup Testing"' {% endif %}
	; {% if svv.module_debug_loaded %} _enable_gmove_debug REASON='"Startup Testing"' {% endif %}
#	{% if svv.module_debug_loaded %} _enable_save_var_debug REASON='"Startup Testing"' {% endif %}

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=printer_startup func_params='"{rawparams|string}"'  {% endif %}


	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"starting"'		# machine state save

	SAVE_VARIABLE VARIABLE=last_spd_fact VALUE=1.0					# init last speed factor

	{% if svv.module_ercf_loaded %}
		_ERCF_SERVO_UP 												# raise the servo arm
	{% endif %}

	{% if svv.module_ledeff_loaded %}
		{% if printer["gcode_macro _printer_vars"].ptr_verb_status %}
			M118 >>> LED CONTROL: LED_EFFECT <<<
		{% endif %}
		STOP_LED_EFFECTS
		_set_ledeff_mode CHAIN=chamber_lights 	EFFECT=normal 	RESET=1	# uses LED_EFFECTS code
		_set_ledeff_mode CHAIN=lcd_lights 		EFFECT=normal	RESET=1	# uses LED_EFFECTS code
		_set_ledeff_mode CHAIN=ercf_lights 		EFFECT=off		RESET=1	# uses LED_EFFECTS code
		_set_ledeff_mode CHAIN=dash_lights 		EFFECT=off		RESET=1	# uses LED_EFFECTS code
	{% else %}
		{% if printer["gcode_macro _printer_vars"].ptr_verb_status %}
			M118 >>> LED CONTROL: KLIPPER <<<
		{% endif %}
		ChLts_Normal		# set chamber lights to normal	- uses Klipper Dotstar code
		LcdLts_Normal		# set lcd lights to normal		- uses Klipper Neopixel code
		ERCFLts_off			# set ercf lights to normal		- uses Klipper Neopixel code
		DBLts_off			# set dash lights to normal		- uses Klipper Neopixel code
	{% endif %}

	printer_config_restore			# will pull in updates and restart if needed

	M106 S26						# fan @ 10% to push air over duct thermistor
	UPDATE_DELAYED_GCODE ID=welcome_msg DURATION=5		# display Welcome Msg at startup + 2s

#	snd_PowerOn						# emit power on sound/song
	sng_startup						# play startup song

	_IdleLED_On						# illuminate idle led
	_PwrLED_Off						# and extinguish the off led

	{% if printer["gcode_macro set_startup_bedtemp"].heat_on_start %}
		set_startup_bedtemp
	{% endif %}

	RUN_SHELL_COMMAND CMD=set_cam_config	# Set nozzle camera config
	
	# test for ercf and then test for boot load testing/init
	{% if svv.module_ercf_loaded %} _ercf_ptr_startup {% endif %}
	
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=printer_startup {% endif %}
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=1		# set a mock temp on the HE, so the watercooling system starts
	
	_start_bounds_checking  DELAY=10	# and then enable automatic periodic H2O cooling parameter checks w/ 5 sec delay
										# 10s delay gives water cooling system time to spool up

	######################### debug stuffs
#	{% if svv.module_debug_loaded %} _disable_save_var_debug {% endif %}	# make sure svv debug off
	; {% if svv.module_debug_loaded %} _disable_gmove_debug {% endif %}
	; {% if svv.module_debug_loaded %} _disable_trace_debug {% endif %}

	{% if svv.debug_err_flag 	== 0 and
		  svv.ercf_err_flag 	== 0 and
		  svv.klicky_err_flag 	== 0 and
		  svv.ledeff_err_flag 	== 0 and
		  svv.linadv_err_flag 	== 0 and
		  svv.gcodeproc_err_flag == 0 and
		  svv.scrub_err_flag 	== 0 		%}
		SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"started"'	# machine state save
		M118 Printer state: {printer.idle_timeout.state}
	{% else %}
		M118 Printer state: NOT Ready - an error is asserted:
		M118 - svv.debug_err_flag: {svv.debug_err_flag}
		M118 - svv.ercf_err_flag: {svv.ercf_err_flag}
		M118 - svv.klicky_err_flag: {svv.klicky_err_flag}
		M118 - svv.ledeff_err_flag: {svv.ledeff_err_flag}
		M118 - svv.linadv_err_flag: {svv.linadv_err_flag}
		M118 - svv.gcodeproc_err_flag: {svv.gcodeproc_err_flag}
		M118 - svv.scrub_err_flag: {svv.scrub_err_flag}
		SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"error"'	# machine state save
	{% endif %}

#----------------------------------------------------------------------------------

[gcode_macro set_startup_bedtemp]
description:  Set bed temp at startup
variable_heat_on_start: 0
variable_ptrstartup_bedtemp: 120
gcode:

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=set_startup_bedtemp func_params='"{rawparams|string}"' {% endif %}

	M140 S{printer["gcode_macro set_startup_bedtemp"].ptrstartup_bedtemp|int}	# set the bed temp
	G4 P500																		# delay for audible purposes
	M300 S659.255 P125															# emit sound
	
	{% if printer["gcode_macro _printer_vars"].ptr_verb_info %}					# for verbosity
		M118 Heating Bed to {printer["gcode_macro set_startup_bedtemp"].ptrstartup_bedtemp|int}
	{% endif %}

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=set_startup_bedtemp {% endif %}

#----------------------------------------------------------------------------------


