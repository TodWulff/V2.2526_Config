#####################################################################
# _userWrap_servo
#####################################################################

[delayed_gcode _userWrap_servo_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_servo_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_userWrap_servo
	_proc_end function=_servo_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_servo]
gcode:

# user config to wrap FW procs constained in homing.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_servo_vars]
description: macro for _servo variables

gcode:

	_proc_start function=_servo_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_servo_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_servo_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_servo_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_servo_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_servo_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_servo_module_start

#--------------------------------------------------------------------

[gcode_macro SET_SERVO]
description: wrapper for FW proc to handle error conditions, verbosity, and conditionally dwell
rename_existing: _SET_SERVO_STOCK
gcode:

	_proc_start function=SET_SERVO func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# if in future there are more than ercf servos, then need to use conditionals herein.

	{% set svv = printer.save_variables.variables %}				# set easy accesss context for save_variables object

	{% if svv.ercf_err_flag and params.WIDTH|default(1)|int %} 				# if WIDTH not passed or != 0 and in an error, then don't do it.
		{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
			log_gmove S="> SET_SERVO Skipped - an ercf error condition is asserted <"
		{% endif %}
		M118 > SET_SERVO Skipped - an error condition is asserted <
	{% else %}
		{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}  
			log_gmove S="SET_SERVO {rawparams|upper}"
		{% endif %}
		_SET_SERVO_STOCK {rawparams}
		# only dwell when a move to an angle or width is commanded - no dwell if servo is just depowered (WIDTH=0.0)
		{% if (params.ANGLE|default(0.0)|float == 0.0) and (params.WIDTH|default(0.0)|float == 0.0) %}
			# M118 no ERCF Servo dwell
		{% else %}
			# M118 ERCF Servo dwelling Angle:{params.ANGLE|default(0)} Width:{params.WIDTH|default(0)}
			_servo_move_dwell
		{% endif %}
	{% endif %}

	_proc_end function=SET_SERVO

#--------------------------------------------------------------------


