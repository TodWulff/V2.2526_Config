#####################################################################
# _ercf_hardware - MCU-specific config - Adafruit QT Py RP2040 MCU - Modification to module needed - flash module replacement to that - which is on the Pico. See: https://bit.ly/QTPyRP2040_Mod
#####################################################################

[delayed_gcode _ercf_mcu_qtpy_rp2040_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_ercf_mcu_qtpy_rp2040_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_ercf_mcu_qtpy_rp2040
	_proc_end function=_ercf_mcu_qtpy_rp2040_loaded

[gcode_macro _info_ercf_hardware]
gcode:

# DON'T CHANGE SENSOR NAMES - HARDCODED IN ERCF.PY...

# Enraged Rabbit : Carrot Feeder config file for ERCF EASY BRD v1.1
# This config sample assumes two J6 jumpers are installed on 2-3 and 4-5, i.e. .[..][..]
# (ties tmc idx to gpio6 for sensorless homing/stall guard)
# https://cdn-learn.adafruit.com/assets/assets/000/101/678/original/adafruit_products_QTRP_sch.png

# Line #s that need edits for new MCU: 17,26,33,42-45,59-60,71-75,91,101,135

[ercf]
encoder_pin: ^ercf:gpio3
# encoder_resolution: 1.346348 # 1000 11
encoder_resolution: 1.411233 # per ERCF_CALIBRATE_ENCODER on 06APR23  https://i.imgur.com/zbv04FR.png

long_moves_speed: 80 # mm/s. Default value is 100mm/s.
long_moves_accel: 400 # mm/s². Default value is 400mm/s²
short_moves_speed: 40 # mm/s. Default value is 25mm/s.
short_moves_accel: 400 # mm/s². Default value is 400mm/s²

[duplicate_pin_override]
pins: ercf:gpio3, PG15

[tmc2209 manual_stepper gear_stepper]
#######################################################################################
### Filament Drive Gear Stepper Motor and Driver ######################################
#######################################################################################

uart_pin: ercf:gpio24
uart_address: 0
interpolate: True
run_current: 1.8
hold_current: 0.1
sense_resistor: 0.110
stealthchop_threshold: 0

[manual_stepper gear_stepper]
step_pin: ercf:gpio28
dir_pin: !ercf:gpio27
enable_pin: !ercf:gpio29
endstop_pin: ^ercf:gpio0			# MHz: Bogus (unused but needed by Klipper)

rotation_distance: 22.81048901638	# Bondtech 5mm Drive Gears
gear_ratio: 80:20
microsteps: 16
full_steps_per_rotation: 200		# 200 for 1.8 degree, 400 for 0.9 degree
velocity: 50						# default speed if move cmd sans speed
accel: 200							# default accel if move cmd sans accel

[tmc2209 manual_stepper selector_stepper]
#######################################################################################
### Color Selector Stepper Motor and Driver ###########################################
#######################################################################################

uart_pin: ercf:gpio24
diag_pin: ^ercf:gpio6				# Set to MCU pin connected to TMC DIAG pin for sensorless homing/stall guard

uart_address: 1
run_current: 0.6
hold_current: 0.1
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 5000			# 0
driver_SGTHRS: 64					# 255 is most sensitive value, 0 is least sensitive

[manual_stepper selector_stepper]
step_pin: ercf:gpio25
dir_pin: ercf:gpio20
enable_pin: !ercf:gpio26
endstop_pin: tmc2209_selector_stepper:virtual_endstop		# using the stallguard (via diag output) of the driver
# endstop_pin: ^ercf:gpio5									# MHz - if using NC contacts

rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200		# 200 for 1.8 degree, 400 for 0.9 degree
velocity: 100						# was 200
accel: 300							# was 600
position_endstop: 0
homing_speed: 100

[servo ercf_servo]
#######################################################################################
### Idler Gear Engagement Servo Motor #################################################
#######################################################################################

pin: ercf:gpio4
maximum_servo_angle: 150
minimum_pulse_width: 0.0005
maximum_pulse_width: 0.0025

[filament_motion_sensor encoder_sensor]
#######################################################################################
### Selector Cart Filament Encoder ####################################################
#######################################################################################

switch_pin: ^ercf:gpio3		# this is a 'shared' signal - doubles as the ERCF encoder - see ercf_software.cfg
pause_on_runout: false		# pause is handled in ERCF_ENCODER_MOTION_ISSUE
detection_length: 4.0
extruder: extruder

runout_gcode:
	_proc_start function=encoder_sensor_runout

	{% set svv = printer.save_variables.variables %}				# set easy accesss context for save_variables object

	# slicer wipetower ops effs with the encoder so ignoring any issues during same...
	{% if svv.type|lower != "wipe tower" %}
		# fil_ecdr_rel
		say_wait S="QT Py 2040 ERCF Encoder Sensor Runout"
		ERCF_ENCODER_MOTION_ISSUE
	{% endif %}

	_proc_end function=encoder_sensor_runout

insert_gcode:
	_proc_start function=encoder_sensor_insert

	{% set svv = printer.save_variables.variables %}				# set easy accesss context for save_variables object

	# slicer wipetower ops effs with the encoder so ignoring any issues during same...
	{% if svv.type|lower != "wipe tower" %}
		# fil_ecdr_prs
	{% endif %}

	_proc_end function=encoder_sensor_insert

event_delay: 0.1
pause_delay: 0.5

[neopixel ercf_mcu]
pin: ercf:gpio12

[gcode_macro ercf_mcu_led_Off]
gcode:
		_proc_start function=ercf_mcu_led_Off
	SET_LED LED=ercf_mcu RED=0 GREEN=0 BLUE=0
	_proc_end function=ercf_mcu_led_Off

#----------------------------------------------------------------------------------

[gcode_macro ercf_mcu_led_Normal]
gcode:
		_proc_start function=ercf_mcu_led_Normal
	SET_LED LED=ercf_mcu RED=0.5 GREEN=0.5 BLUE=0.5
	_proc_end function=ercf_mcu_led_Normal

#----------------------------------------------------------------------------------

[gcode_macro ercf_mcu_led_Full]
gcode:
		_proc_start function=ercf_mcu_led_Full
	SET_LED LED=ercf_mcu RED=1 GREEN=1 BLUE=1
	_proc_end function=ercf_mcu_led_Full

#----------------------------------------------------------------------------------

[gcode_macro ercf_mcu_led_Red]
gcode:
		_proc_start function=ercf_mcu_led_Red
	SET_LED LED=ercf_mcu RED=0.5 GREEN=0 BLUE=0
	_proc_end function=ercf_mcu_led_Red

#----------------------------------------------------------------------------------

[gcode_macro ercf_mcu_led_Green]
gcode:
		_proc_start function=ercf_mcu_led_Green
	SET_LED LED=ercf_mcu RED=0 GREEN=0.5 BLUE=0
	_proc_end function=ercf_mcu_led_Green

#----------------------------------------------------------------------------------

[gcode_macro ercf_mcu_led_Blue]
gcode:
		_proc_start function=ercf_mcu_led_Blue
	SET_LED LED=ercf_mcu RED=0 GREEN=0 BLUE=0.5
	_proc_end function=ercf_mcu_led_Blue

#----------------------------------------------------------------------------------

[gcode_macro ercf_mcu_led_Orange]
gcode:
		_proc_start function=ercf_mcu_led_Orange
	SET_LED LED=ercf_mcu RED=0.3 GREEN=0.1 BLUE=0
	_proc_end function=ercf_mcu_led_Orange

#----------------------------------------------------------------------------------

[gcode_macro ercf_mcu_led_Test]
gcode:
		_proc_start function=ercf_mcu_led_Test
	SET_LED LED=ercf_mcu RED=0.1 GREEN=0.1 BLUE=0.5
	_proc_end function=ercf_mcu_led_Test
