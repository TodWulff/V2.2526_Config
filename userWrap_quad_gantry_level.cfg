#####################################################################
# _userWrap_quad_gantry_level
#####################################################################

[delayed_gcode _userWrap_quad_gantry_level_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_quad_gantry_level_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_userWrap_quad_gantry_level
	_proc_end function=_quad_gantry_level_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_quad_gantry_level]
gcode:

# user config to wrap FW procs constained in homing.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_quad_gantry_level_vars]
description: macro for _quad_gantry_level variables

gcode:

	_proc_start function=_quad_gantry_level_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_quad_gantry_level_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_quad_gantry_level_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_quad_gantry_level_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_quad_gantry_level_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_quad_gantry_level_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_quad_gantry_level_module_start

#--------------------------------------------------------------------

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL_STOCK
description: Conform a moving, twistable gantry to the shape of a stationary bed with klicky automount - rehomez z thereafter
# consider supporting passage of a mesh parameter to activate after the QGL is completed. Possibly in _ensure_gql (macros)
gcode:

	_proc_start function=QUAD_GANTRY_LEVEL func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"qgling"'	# machine state save

	say_wait S="Leveling Gantry"

	_ENSURE_HOMED

	_CheckProbe action=query
	Attach_Probe

	BED_MESH_CLEAR
#	M118 ... Bed Mesh Cleared as part of QGL
	say_nc S="Mesh Cleared"

	# having intermittent timer too close errors here with something (bad on LaFrite, intermittent on LePotato, very intermittent on Pi3B+
	# while it could further exaserbate the issue, going to wrap FW proc w/ trace debug to see if FW code is calling any config procs to
	# see if I can narrow in on if it is something that I've done in the configs that might be contributing to the issues.
	# ... No joy, it didn't reveal anything.

#	enable_debug_trace
	_QUAD_GANTRY_LEVEL_STOCK {% for p in params %}{'%s=%s ' % (p, params[p])}{% endfor %}
#	disable_debug_trace

	Dock_Probe

	# given we tweaked on the gantry, need to rehome Z for accuracy's sake
	clean_nozzle
	G28 Z
	
	say_wait_nc S="Gantry Leveled"

	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"qgled"'	# machine state save

	_proc_end function=QUAD_GANTRY_LEVEL

#--------------------------------------------------------------------


