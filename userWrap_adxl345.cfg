#####################################################################
# _userWrap_adxl345
#####################################################################

[delayed_gcode _userWrap_adxl345_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_adxl345_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_adxl345
	_proc_end function=_adxl345_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_adxl345]
gcode:

# user config to wrap FW procs constained in adxl345.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_adxl345_vars]
description: macro for _adxl345 variables

gcode:

	_proc_start function=_adxl345_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_adxl345_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_adxl345_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_adxl345_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_adxl345_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_adxl345_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_adxl345_module_start

#--------------------------------------------------------------------

[gcode_macro ACCELEROMETER_DEBUG_READ]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _ACCELEROMETER_DEBUG_READ_STOCK
gcode:

	_proc_start function=ACCELEROMETER_DEBUG_READ func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_ACCELEROMETER_DEBUG_READ_STOCK {rawparams}

	_proc_end function=ACCELEROMETER_DEBUG_READ

#--------------------------------------------------------------------

[gcode_macro ACCELEROMETER_DEBUG_WRITE]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _ACCELEROMETER_DEBUG_WRITE_STOCK
gcode:

	_proc_start function=ACCELEROMETER_DEBUG_WRITE func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_ACCELEROMETER_DEBUG_WRITE_STOCK {rawparams}

	_proc_end function=ACCELEROMETER_DEBUG_WRITE

#--------------------------------------------------------------------

[gcode_macro ACCELEROMETER_MEASURE]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _ACCELEROMETER_MEASURE_STOCK
gcode:

	_proc_start function=ACCELEROMETER_MEASURE func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_ACCELEROMETER_MEASURE_STOCK {rawparams}

	_proc_end function=ACCELEROMETER_MEASURE

#--------------------------------------------------------------------

[gcode_macro ACCELEROMETER_QUERY]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _ACCELEROMETER_QUERY_STOCK
gcode:

	_proc_start function=ACCELEROMETER_QUERY func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_ACCELEROMETER_QUERY_STOCK {rawparams}

	_proc_end function=ACCELEROMETER_QUERY

#--------------------------------------------------------------------


