#####################################################################
# _ercf_hardware - broke out MCU-specific stuff to individual configs
#####################################################################

[gcode_macro _info_ercf_hardware]
gcode:

# DON'T CHANGE SENSOR NAMES - HARDCODED IN ERCF.PY...

# Enraged Rabbit : Carrot Feeder config file for ERCF EASY BRD v1.1
# This config sample assumes two J6 jumpers are installed on 2-3 and 4-5, i.e. [..].[..]

# If changes are made to any one of the following, should migrate said changes to the other ones too...
[include _ercf_mcu_xiao.cfg]				# working
#[include _ercf_mcu_qtpy_samd21.cfg]		# working
#[include _ercf_mcu_qtpy_rp2040.cfg]		# working


[filament_switch_sensor toolhead_sensor]

#######################################################################################
### Toolhead Filament Sensor (Switch) #################################################
#######################################################################################
# filament sensor is wired to the printer main mcu

switch_pin: ^!PG15
pause_on_runout: False	# for now, until reliable ... it's unreliable at this time (15FEB22) requires redesign/different ...
# pause_on_runout: True	

runout_gcode: 
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=toolhead_sensor_runout {% endif %}
	# ERCF_ENCODER_MOTION_ISSUE		# when working, enable this and set pause_on_runout to true...
	M118 --> TH_filsw_rel
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=toolhead_sensor_runout {% endif %}

insert_gcode:
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=toolhead_sensor_insert {% endif %}
	M118 --> TH_filsw_prs
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=toolhead_sensor_insert {% endif %}

event_delay: 0.1
pause_delay: 0.5

#--------------------------------------------------------------------------------------
### Klipper Documentation Guidance
#--------------------------------------------------------------------------------------
# [filament_motion_sensor]Â¶
# Filament Motion Sensor. Support for filament insert and runout detection using an encoder that toggles the output pin during filament movement through the sensor.  See the command reference (BELOW) for more information.

# [filament_motion_sensor my_sensor]
# detection_length: 7.0
# #   The minimum length of filament pulled through the sensor to trigger
# #   a state change on the switch_pin
# #   Default is 7 mm.
# extruder:
# #   The name of the extruder section this sensor is associated with.
# #   This parameter must be provided.
# switch_pin:
# #pause_on_runout:
# #runout_gcode:
# #insert_gcode:
# #event_delay:
# #pause_delay:
# #   See the "filament_switch_sensor" section (BELOW) for a description of the
# #   above parameters.

#--------------------------------------------------------------------------------------

# The following command is available when a filament_switch_sensor or filament_motion_sensor
# config section is enabled.

# QUERY_FILAMENT_SENSOR SENSOR=<sensor_name>: Queries the current status of the filament sensor.
# The data displayed on the terminal will depend on the sensor type defined in the configuration.

# SET_FILAMENT_SENSOR SENSOR=<sensor_name> ENABLE=[0|1]: Sets the filament sensor on/off.
# If ENABLE is set to 0, the filament sensor will be disabled, if set to 1 it is enabled.

#--------------------------------------------------------------------------------------

#[filament_switch_sensor my_sensor]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#switch_pin:
#   The pin on which the switch is connected. This parameter must be
#   provided.

#######################################################################################
### overloading of pin functions
#######################################################################################

# #----------------------------------------------------------------------------------

# [led_effect fil_ecdr_ledOn]
# frame_rate:							1
# autostart:							false
# leds:							   
	# neopixel:dash_lights (1)
# layers:
# #   Name		Rate	Cutoff	Blend		Palette
	# static		0		0		top			(0,0.25,0)

# #----------------------------------------------------------------------------------

# [led_effect fil_ecdr_ledOff]
# frame_rate:							1
# autostart:							false
# leds:							   
	# neopixel:dash_lights (1)
# layers:
# #   Name		Rate	Cutoff	Blend		Palette
	# static		0		0		top			(0,0,0)

# #----------------------------------------------------------------------------------

# [led_effect TH_filsw_ledOn]
# frame_rate:							1
# autostart:							false
# leds:							   
	# neopixel:dash_lights (2)
# layers:
# #   Name		Rate	Cutoff	Blend		Palette
	# static		0		0		top			(0,0.25,0)

# #----------------------------------------------------------------------------------

# [led_effect TH_filsw_ledOff]
# frame_rate:							1
# autostart:							false
# leds:							   
	# neopixel:dash_lights (2)
# layers:
# #   Name		Rate	Cutoff	Blend		Palette
	# static		0		0		top			(0,0,0)

# #----------------------------------------------------------------------------------

[gcode_macro fil_ecdr_prs]
description:  called when the fil encoder toggles closed
gcode:
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=fil_ecdr_prs {% endif %}
	# set_led_effect EFFECT=fil_ecdr_ledOff STOP=1
	# set_led_effect EFFECT=fil_ecdr_ledOn
	M118 fil_ecdr_prs
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=fil_ecdr_prs {% endif %}

# #----------------------------------------------------------------------------------

[gcode_macro fil_ecdr_rel]
description:  called when the fil encoder toggles open
gcode:
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=fil_ecdr_rel {% endif %}
	# set_led_effect EFFECT=fil_ecdr_ledOn STOP=1
	# set_led_effect EFFECT=fil_ecdr_ledOff
	M118 fil_ecdr_rel
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=fil_ecdr_rel {% endif %}

# #----------------------------------------------------------------------------------

[gcode_macro TH_filsw_prs]
description:  called when the th fil sw toggles closed
gcode:
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=TH_filsw_prs {% endif %}
	# set_led_effect EFFECT=TH_filsw_ledOff STOP=1
	# set_led_effect EFFECT=TH_filsw_ledOn
	M118 TH_filsw_prs
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=TH_filsw_prs {% endif %}

# #----------------------------------------------------------------------------------

[gcode_macro TH_filsw_rel]
description:  called when the th fil sw toggles open
gcode:
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=TH_filsw_rel {% endif %}
	# set_led_effect EFFECT=TH_filsw_ledOn STOP=1
	# set_led_effect EFFECT=TH_filsw_ledOff
	M118 TH_filsw_rel
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=TH_filsw_rel {% endif %}

# #----------------------------------------------------------------------------------

# # using existing sensors to drive other actions besides those intended
# # must declare [duplicate_pin_override] for pins that have more than one function
# # in this case that is done herein in the ercf hardware config

# seems trying to use encoder output might be problematic
# going to try to parallel it into another gpio and see

# #----------------------------------------------------------------------------------

# [gcode_button fil_ecdr_btn]
# pin: ^ercf:PA6	# <-- note this must match the existing definition of the pin, else stuff borks hard
# press_gcode:
# #	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=fil_ecdr_btn_press_gcode {% endif %}
	# fil_ecdr_prs  
# #	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=fil_ecdr_btn_press_gcode {% endif %}
# release_gcode:
# #	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=fil_ecdr_btn_release_gcode {% endif %}
	# fil_ecdr_rel 
# #	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=fil_ecdr_btn_release_gcode {% endif %}

# #----------------------------------------------------------------------------------

# [gcode_button TH_filsw_btn]
# pin: ^!PG15		# <-- note this must match the existing definition of the pin, else stuff borks hard
# press_gcode:
# #	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=TH_filsw_btn_press_gcode {% endif %}
	# TH_filsw_prs
# #	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=TH_filsw_btn_press_gcode {% endif %}
# release_gcode:
# #	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=TH_filsw_btn_release_gcode {% endif %}
	# TH_filsw_rel
# #	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=TH_filsw_btn_release_gcode {% endif %}


