#####################################################################
# 	RESUME + ERCF adaptations
#####################################################################
# https://www.klipper3d.org/Config_Reference.html#pause_resume
# https://www.klipper3d.org/G-Codes.html#pause_resume

[gcode_macro RESUME]
description: Resume the actual running print - adapted for ERCF
rename_existing: RESUME_BASE
gcode:

	{% set resume_flag = 0|int %}

	{% if printer.save_variables.variables.module_ercf_loaded %}
		{% if printer["gcode_macro ERCF_PAUSE"].is_paused|int != 0 %}
			M118 You can't resume the print without unlocking the ERCF first.
			M118 Run ERCF_UNLOCK and solve any issue before hitting Resume again
			# don't flag a resume here as ercf is paused - user must ercf_unlock first...
			# .?.consider an ercf_unlock here so user can just fix and resume thereafter.?.
		{% else %}
			{% set resume_flag = 1|int %}
			{% if printer["gcode_macro ERCF_VAR"].clog_detection|int == 1 %}
				SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
			{% endif %}
		{% endif %}
	{% else %}
		{% set resume_flag = 1|int %}
	{% endif %}

	{% if resume_flag %}

		M118 print_resuming
	
		SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_resuming"'		# machine state save

		snd_PrintResume
		_HOURMETER_ON
		_PrintLED_On
		
		{% if printer.save_variables.variables.module_led_effect_loaded %}
			set_light_mode CHAIN=chamber_lights	EFFECT=normal	RESET=1		# uses LED_EFFECTS code
			set_light_mode CHAIN=lcd_lights 	EFFECT=normal	RESET=1		# uses LED_EFFECTS code
			# set_light_mode CHAIN=ercf_lights	EFFECT=off		RESET=1		# uses LED_EFFECTS code
			# set_light_mode CHAIN=dash_lights	EFFECT=off		RESET=1		# uses LED_EFFECTS code
		{% else %}
			ChLts_Normal		# set chamber lights to normal	- uses Klipper Dotstar code
			LcdLts_Normal		# set lcd lights to normal		- uses Klipper Neopixel code
			# ERCFLts_off			# set ercf lights to normal		- uses Klipper Neopixel code
			# DBLts_off			# set dash lights to normal		- uses Klipper Neopixel code
		{% endif %}
		
		RESTORE_GCODE_STATE NAME=State_Save_Pause

		##### set defaults #####
		{% set e = params.E|default(1) %} #edit to your retract length
		#### get VELOCITY parameter if specified ####
		{% if 'VELOCITY' in params|upper %}
		  {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
		{%else %}
		  {% set get_params = "" %}
		{% endif %}
		##### end of definitions #####
		
		# {% if printer.extruder.can_extrude|lower == 'true' %}
		 # relative
		 # G1 E{e} F2100
		# {% else %}
		  # {action_respond_info("Extruder not hot enough")}
		# {% endif %}

		absolute
		stop_pause_alarm
		M300 P10 S1000
		M300 P10 S2000

		RESUME_BASE {get_params}
		CLEAR_PAUSE
		SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"print_resumed"'	# machinestatesave

		M118 print_resumed

	{% endif %}
