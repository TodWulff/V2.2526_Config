#####################################################################
# Neopixel and Dotstar Commands
#####################################################################

[delayed_gcode _dotstar_leds_loaded]
initial_duration: 4.501
gcode:
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=_dotstar_leds_loaded func_params='"{rawparams|string}"'  {% endif %}
	{% if printer["gcode_macro _printer_vars"].ptr_verb_cfgload %} 
		M118 >>> _dotstar_leds.cfg Loaded. <<<
	{% endif %}
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=_dotstar_leds_loaded {% endif %}

[gcode_macro _info_dotstar_leds]
gcode:

# https://www.klipper3d.org/G-Codes.html#neopixel-and-dotstar-commands 
# SET_LED LED=<config_name> RED=<value> GREEN=<value> BLUE=<value> WHITE=<value> [INDEX=<index>] [TRANSMIT=0] [SYNC=1]

# The following command is available when a neopixel config section or dotstar config section is enabled:
#
# SET_LED LED=<config_name> RED=<value> GREEN=<value> BLUE=<value> WHITE=<value> [INDEX=<index>] [TRANSMIT=0] [SYNC=1]:  
# 
# This sets the LED output. Each color <value> must be between 0.0 and 1.0.   
# 
# The WHITE option is only valid on RGBW LEDs.   
# 
# If multiple LED chips are daisy-chained then one may specify INDEX to alter the color of just the given chip (1 for the  
# first chip, 2 for the second, etc.).   
# 
# If INDEX is not provided then all LEDs in the daisy-chain will be set to the provided color.   
# 
# If TRANSMIT=0 is specified then the color change will only be made on the next SET_LED command that does not specify  
# TRANSMIT=0# this may be useful in combination with the INDEX parameter to batch multiple updates in a daisy-chain.  
#  
# By default, the SET_LED command will sync it's changes with other ongoing gcode commands. This can lead to undesirable behavior 
# if LEDs are being set while the printer is not printing as it will reset the idle timeout.  
#  
# If careful timing is not needed, the optional SYNC=0 parameter can be specified to apply the changes instantly and not reset the idle timeout.
  
# neopixel / dotstar  STATUS Queries
#
# The following information is available for each [neopixel led_name] and [dotstar led_name] defined in printer.cfg:  
# color_data: An array of objects, with each object containing the RGBW values for a led in the chain.   
# Note that not all configurations will contain a white value.   
# Each value is represented as a float from 0 to 1.   
# For example, the blue value of the second neopixel in a chain could be accessed at printer["neopixel <config_name>"].color_data[1].B.

[dotstar chamber_lights] 

data_pin: pico:gpio11
clock_pin: pico:gpio10

chain_count: 231 	# 228, but off by 3 error exists somewhere in klipper...
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0

#----------------------------------------------------------------------------------

[gcode_macro ChLts_Off]
gcode:
 	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=ChLts_Off {% endif %}
	SET_LED LED=chamber_lights RED=0 GREEN=0 BLUE=0
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=ChLts_Off {% endif %}

#----------------------------------------------------------------------------------

[gcode_macro ChLts_Normal]
gcode:
 	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=ChLts_Normal {% endif %}
	SET_LED LED=chamber_lights RED=0.5 GREEN=0.5 BLUE=0.5
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=ChLts_Normal {% endif %}

#----------------------------------------------------------------------------------

[gcode_macro ChLts_Full]
gcode:
  	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=ChLts_Full {% endif %}
	SET_LED LED=chamber_lights RED=1 GREEN=1 BLUE=1
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=ChLts_Full {% endif %}

#----------------------------------------------------------------------------------

[gcode_macro ChLts_Red]
gcode:
 	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=ChLts_Red {% endif %}
	SET_LED LED=chamber_lights RED=0.5 GREEN=0 BLUE=0
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=ChLts_Red {% endif %}

#----------------------------------------------------------------------------------

[gcode_macro ChLts_Green]
gcode:
 	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=ChLts_Green {% endif %}
	SET_LED LED=chamber_lights RED=0 GREEN=0.5 BLUE=0
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=ChLts_Green {% endif %}

#----------------------------------------------------------------------------------

[gcode_macro ChLts_Blue]
gcode:
 	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=ChLts_Blue {% endif %}
	SET_LED LED=chamber_lights RED=0 GREEN=0 BLUE=0.5
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=ChLts_Blue {% endif %}

#----------------------------------------------------------------------------------

[gcode_macro ChLts_Orange]
gcode:
 	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=ChLts_Orange {% endif %}
	SET_LED LED=chamber_lights RED=0.9 GREEN=0.3 BLUE=0
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=ChLts_Orange {% endif %}

#----------------------------------------------------------------------------------

[gcode_macro ChLts_Test]
gcode:
 	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=ChLts_Test {% endif %}
	SET_LED LED=chamber_lights RED=0.5 GREEN=0.5 BLUE=1
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=ChLts_Test {% endif %}

#----------------------------------------------------------------------------------

######################################################
