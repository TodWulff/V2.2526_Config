#############################################################################
# BRODY 22 ____printer Baseline Printer Config
#############################################################################

[delayed_gcode ____printer_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=____printer_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=____printer
	_proc_end function=____printer_loaded

[gcode_macro _info____printer]
gcode:

	_proc_start function=_info____printer func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	say_wait S="Woo Who?"

	# ~MHz mods 12 NOV 2021 for New Fab V2.4 (not v2.4r2)
	# - 7OW/PT1000 Dragon WHF HE (Watercooled)
	# - AB Toolhead PCB Chamber Temp Sens=0805 10K 1% B=3950K(25/50C)
	# - HE0=HE_HTR, HE3=HOUR_METER
	# - M0=B, M1=A, M2.1=Z0, M3=Z1, M4=Z2, M5=Z3, M6=E
	# - F0=PCF, F1=HEF
	# - DIAG0=XES, DIAG1=YES, DIAG2=ZES, DIAG3=PL-08 Bed Sens (blocking diode on AB PCB)
	# - DIAG4=SFS
	# - RGB LED IO (PB0) unused
	# - TB=BED, T0=HE, T1=AB_PCB(CHAMBER)
	# - Display Aural Xdcr on uC IO PE8
	# - Power and LED Control via RP2040 GPIO is in moonraker.conf

	# - https://github.com/TodWulff/V2.2526_Config/blob/main/V2.2526_Hardware/__WDM/V2.2526%20Wiring%20Diagram.pdf

	# 10.0.0.22
	# Pico usb-Klipper_rp2040_E66058388326382F-if00 https://i.imgur.com/uENqwNa.png

	# Xiao usb-Klipper_samd21g18a_80D0BB084134555020312E30202C18FF-if00 https://i.imgur.com/qeVSKRV.png
	# for Xiao, bin2uf2 Tool: https://github.com/lancaster-university/codal/blob/master/utils/uf2conv.py Usage https://i.imgur.com/oyn8TXP.png

	# Octopus usb-Klipper_stm32f446xx_26001F00115053424E363620-if00 https://i.imgur.com/Z2xTg2X.png

	## Voron Design VORON2.4 350mm BigTreeTech OctoPus V1.1 TMC2209 UART config

	_proc_end function=_info____printer
	
#--------------------------------------------------------------------


[gcode_macro _printer_vars]

variable_pause_retract_default:		1.0		# default retract amount at pause - is also default deretract amount at resume

variable_min_speed_factor:			10.0	# pct - sets the lowest speed factor limit - a command of lower is set to this.

# idle timeout set in _host_control.cfg, _host_control_vars
# default logging * 4 set in _debug_tools.cfg, _debug__tools_vars
# voice synthesis enable set in _tts.cfg, _tts_vars

gcode:

	_proc_start function=_printer_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	#there is none, this is for broad variable access

	_proc_end function=_printer_vars
	
#--------------------------------------------------------------------

[delayed_gcode ____printer_start]
#description: Sets state flags for conditional use elsewhere.
initial_duration: 0.5							# have this at 0.5s as init code in _startup_autoexec.cfg runs at 0.1s after start
gcode:

	#for feedback purposes
	# This is intentionally before the proc_start call...  

	_SAVE_VARIABLE_STOCK VARIABLE=proc_depth	VALUE=1			# resets in case printer hung last run and persistent var val is bad
																# this is the first thing to run after klipper is ready, so call organic vs. wrapper
	
	{% set tts_entry_state = printer["gcode_macro _tts_vars"].tts_enable %}
	
	SET_GCODE_VARIABLE MACRO=_tts_vars VARIABLE=tts_enable VALUE=0

	{% if printer["gcode_macro _debug__tools_vars"].debug_save_var %}
		enable_debug_save_var
	{% else %}
		disable_debug_save_var
	{% endif %}
	
	{% if printer["gcode_macro _debug__tools_vars"].debug_gmove %}
		enable_debug_gmove
	{% else %}
		disable_debug_gmove
	{% endif %}
	
	{% if printer["gcode_macro _debug__tools_vars"].debug_gcode_state %}
		enable_debug_gcode_state
	{% else %}
		disable_debug_gcode_state
	{% endif %}
	
	{% if printer["gcode_macro _debug__tools_vars"].debug_codetrace %}
		enable_code_trace
	{% else %}
		disable_code_trace
	{% endif %}
	
	SET_GCODE_VARIABLE MACRO=_tts_vars VARIABLE=tts_enable VALUE={tts_entry_state}

	_proc_start function=____printer_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module____printer_loaded VALUE=1					#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=____printer_err_flag VALUE=0						#init error flag via persistent variable that this module is not in error
	
	_proc_end function=____printer_start
	
#--------------------------------------------------------------------

[network_status]
# see https://github.com/JeremyRuhland/klipper_network_status

#--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 5000
max_accel_to_decel: 5000
square_corner_velocity: 5
max_z_velocity: 50
max_z_accel: 350

#[printer]
#kinematics:
# The type of printer in use. This option may be one of: cartesian,
# corexy, corexz, hybrid_corexy, hybrid_corexz, rotary_delta, delta,
# polar, winch, or none. This
# parameter must be specified.
#max_velocity:
# Maximum velocity (in mm/s) of the toolhead (relative to the
# print). This parameter must be specified.
#max_accel:
# Maximum acceleration (in mm/s^2) of the toolhead (relative to the
# print). This parameter must be specified.
#max_accel_to_decel:
# A pseudo acceleration (in mm/s^2) controlling how fast the
# toolhead may go from acceleration to deceleration. It is used to
# reduce the top speed of short zig-zag moves (and thus reduce
# printer vibration from these moves). The default is half of
# max_accel.
#square_corner_velocity: 5.0
# The maximum velocity (in mm/s) that the toolhead may travel a 90
# degree corner at. A non-zero value can reduce changes in extruder
# flow rates by enabling instantaneous velocity changes of the
# toolhead during cornering. This value configures the internal
# centripetal velocity cornering algorithm# corners with angles
# larger than 90 degrees will have a higher cornering velocity while
# corners with angles less than 90 degrees will have a lower
# cornering velocity. If this is set to zero then the toolhead will
# decelerate to zero at each corner. The default is 5mm/s.

#############################################################################
# [] Includes
#############################################################################

# LOOK --> Reportedly, load order is a thing, so I must have gotten lucky.
# When mucking around, I was able to cause a repetative timer too close at startup
# I perceive it was related to svv, but that is speculation, admittedly.
# Anyways, be cognitive that altering the order may have implications... <-- LOOK

[include _tts.cfg]
[include mainsail.cfg]
[include _persistent_variables.cfg]
[include _console_response.cfg]
[include __mcus.cfg]
[include _io_defs.cfg]
[include _pico_expander.cfg]
[include _lcd_module.cfg]
[include ___startup_autoexec.cfg]
[include _temp_capture.cfg]
[include _shell_command.cfg]
[include _host_control.cfg]
[include _service_control.cfg]
[include _hardware_control.cfg]
[include _cameras.cfg]
[include _git_repo_ops.cfg]
[include _somafm.cfg]
[include _sys_load_validation.cfg]
[include _exclude_object.cfg]
[include _user_interaction.cfg]			# <-- chain loads _ui_test.cfg
[include _debug__tools.cfg]				# <-- chain loads scoped _debug_[blah].cfgs - [blah] = userlogs, trace, state, savar, and gmove
[include _gcode_buttons.cfg]
[include _led_effects.cfg]
[include _dotstar_leds.cfg]
[include _neopixel_leds.cfg]
[include _ercf_user_vars.cfg]
[include _ercf_hardware.cfg]			# <-- chains in _ercf_mcu_[...] - also this affects Xiao (gpio stops acting correctly) - something in ercf.py - using QT Py now...
[include _ercf_software.cfg]			# <-- chain loads _ercf_software_mods.cfg
[include _stepstick_config.cfg]
[include _sensors_heaters.cfg]
[include _steppers_printer.cfg]
[include _fans_cooling.cfg]
[include _gcode_macros.cfg]
[include _m300_sounds.cfg]		 		# <-- chain loads gcode songs [/me rolls eyes]
[include _qgl_bedmesh.cfg]
[include _resonance_compensation.cfg]
[include _nozzle_scrub.cfg]
[include _homing_override.cfg]
[include _klicky-probe.cfg]
[include _linear_advance.cfg]
[include _hw_retract.cfg]
[include _gcode_arcs.cfg]
[include _park_procs.cfg]
[include _gcode_processing.cfg]
[include __print_start.cfg]
[include __print_pause.cfg]
[include __print_resume.cfg]
[include __print_cancel.cfg]
[include __print_end.cfg]
[include _corexy_gantry_speed_test.cfg]
[include _H2O_param_bounding.cfg]		# <-- in-print monitoring of H2O temps/rates/speeds and pausing/alerting on an escape
[include _slicer_fixes.cfg]				# <-- temp work around [ override first layer extrusion multiplier on infill ]

# ugh - not reliable atm (Klicky/Z Limit Sw Related, I perceive...)
# [include _z_calibration.cfg]
  
# disabled as these are testing/dev/wip
# [include _lcd_tweaks.cfg]				# from Voron Docs - candidate for future inclusion
# [include _pico_oled.cfg]				# Pico OLED display (for v0.1)
# [include _servo_test.cfg]				# testing for v0
# [include _buzzer_test.cfg]			# testing for v0
# [include _chamber_air.cfg]			# air quality stuffs

## These are wrapper configs to enable logging and customization of 'firmware' procs
## in klippy, kinematics, extras, etc.

[include userWrap_adxl345.cfg]
# [include userWrap_angle.cfg]                        # module not enabled
[include userWrap_bed_mesh.cfg]
# [include userWrap_bed_screws.cfg]					  # module not enabled
# [include userWrap_bed_tilt.cfg]                     # module not enabled
# [include userWrap_bltouch.cfg]                      # module not enabled
# [include userWrap_cartesian.cfg]                    # module not enabled
[include userWrap_configfile.cfg]
[include userWrap_delayed_gcode.cfg]
# [include userWrap_delta_calibrate.cfg]              # module not enabled
[include userWrap_display.cfg]
[include userWrap_display_status.cfg]
# [include userWrap_endstop_phase.cfg]                # module not enabled
[include userWrap_ercf.cfg]
[include userWrap_exclude_object.cfg]
[include userWrap_extruder.cfg]
[include userWrap_fan.cfg]
# [include userWrap_fan_generic.cfg]                  # module not enabled
[include userWrap_filament_switch_sensor.cfg]
[include userWrap_firmware_retraction.cfg]
[include userWrap_force_move.cfg]
[include userWrap_gcode.cfg]
[include userWrap_gcode_arcs.cfg]
# [include userWrap_gcode_button.cfg]                 # module not enabled
[include userWrap_gcode_macro.cfg]
[include userWrap_gcode_move.cfg]
[include userWrap_gcode_shell_command.cfg]
# [include userWrap_hall_filament_width_sensor.cfg]   # module not enabled
[include userWrap_heater_bed.cfg]
[include userWrap_heaters.cfg]
[include userWrap_homing.cfg]						  #? G28 herein
[include userWrap_homing_override.cfg]				  #? G28 herein
# [include userWrap_idex_modes.cfg]					  # module not enabled
[include userWrap_idle_timeout.cfg]
[include userWrap_input_shaper.cfg]
[include userWrap_led.cfg]
[include userWrap_led_effect.cfg]
[include userWrap_manual_probe.cfg]
[include userWrap_manual_stepper.cfg]
# [include userWrap_mcp4018.cfg]                      # module not enabled
[include userWrap_output_pin.cfg]
# [include userWrap_palette2.cfg]                     # module not enabled
[include userWrap_pause_resume.cfg]
[include userWrap_pid_calibrate.cfg]
[include userWrap_print_stats.cfg]
[include userWrap_probe.cfg]
[include userWrap_quad_gantry_level.cfg]
[include userWrap_query_adc.cfg]
[include userWrap_query_endstops.cfg]
[include userWrap_resonance_tester.cfg]
[include userWrap_respond.cfg]
[include userWrap_safe_z_home.cfg]					  #? G28 herein
[include userWrap_save_variables.cfg]
# [include userWrap_screws_tilt_adjust.cfg]           # module not enabled
# [include userWrap_sdcard_loop.cfg]                  # module not enabled
[include userWrap_servo.cfg]
# [include userWrap_skew_correction.cfg]              # module not enabled
# [include userWrap_smart_effector.cfg]               # module not enabled
[include userWrap_stepper_enable.cfg]
[include userWrap_temperature_fan.cfg]
[include userWrap_tmc.cfg]
[include userWrap_toolhead.cfg]
# [include userWrap_tsl1401cl_filament_width_sensor.cfg]	# module not enabled
[include userWrap_tuning_tower.cfg]
[include userWrap_userlogger.cfg]
[include userWrap_virtual_sdcard.cfg]
# [include userWrap_z_calibration.cfg]          	  # module not enabled
# [include userWrap_z_thermal_adjust.cfg]             # module not enabled
# [include userWrap_z_tilt.cfg]                       # module not enabled
