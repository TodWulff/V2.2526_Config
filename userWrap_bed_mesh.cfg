#####################################################################
# _userWrap_bed_mesh
#####################################################################

[delayed_gcode _userWrap_bed_mesh_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_bed_mesh_loaded func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'
	_module_loaded MODULE=_userWrap_bed_mesh
	_proc_end function=_bed_mesh_loaded

#--------------------------------------------------------------------

[gcode_macro _info_userWrap_bed_mesh]
gcode:

# user config to wrap FW procs constained in bed_mesh.cfg

#--------------------------------------------------------------------

[gcode_macro _userWrap_bed_mesh_vars]
description: macro for _bed_mesh variables

gcode:

	_proc_start function=_bed_mesh_vars func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	# there is none, this is for module variable use only

	_proc_end function=_bed_mesh_vars

#--------------------------------------------------------------------

[delayed_gcode _userWrap_bed_mesh_module_start]
#description: Inits svv flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_bed_mesh_module_start func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=module_bed_mesh_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_bed_mesh_err_flag VALUE=0							#init error flag that this module is not in error

	_proc_end function=_bed_mesh_module_start

#--------------------------------------------------------------------

[gcode_macro BED_MESH_CLEAR]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _BED_MESH_CLEAR_STOCK
gcode:

	_proc_start function=BED_MESH_CLEAR func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_BED_MESH_CLEAR_STOCK {rawparams}

	_proc_end function=BED_MESH_CLEAR

#--------------------------------------------------------------------

[gcode_macro BED_MESH_MAP]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _BED_MESH_MAP_STOCK
gcode:

	_proc_start function=BED_MESH_MAP func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_BED_MESH_MAP_STOCK {rawparams}

	_proc_end function=BED_MESH_MAP

#--------------------------------------------------------------------

[gcode_macro BED_MESH_OFFSET]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _BED_MESH_OFFSET_STOCK
gcode:

	_proc_start function=BED_MESH_OFFSET func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_BED_MESH_OFFSET_STOCK {rawparams}

	_proc_end function=BED_MESH_OFFSET

#--------------------------------------------------------------------

[gcode_macro BED_MESH_OUTPUT]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _BED_MESH_OUTPUT_STOCK
gcode:

	_proc_start function=BED_MESH_OUTPUT func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_BED_MESH_OUTPUT_STOCK {rawparams}

	_proc_end function=BED_MESH_OUTPUT

#--------------------------------------------------------------------

[gcode_macro BED_MESH_PROFILE]
description: wrap FW proc for userLogging purposes
RENAME_EXISTING: _BED_MESH_PROFILE_STOCK
gcode:

	_proc_start function=BED_MESH_PROFILE func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	_BED_MESH_PROFILE_STOCK {rawparams}

	_proc_end function=BED_MESH_PROFILE

#--------------------------------------------------------------------

[gcode_macro BED_MESH_CALIBRATE]
description: Perform [home,] [QGL, and] bed mesh leveling
rename_existing: _BED_MESH_CALIBRATE_STOCK
description: Perform Mesh Bed Leveling with klicky automount
gcode:

	_proc_start function=BED_MESH_CALIBRATE func_params='"{rawparams|string|replace("\\\"", "")|replace("\\\'", "")|replace("\"", "")|replace("\'", "")}"'

	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"bed_meshing"'	# machine state save

	_ENSURE_QGL							# homes if needed - need to have the gantry leveled

	_CheckProbe action=query
	Attach_Probe

	# having timer too close errors here with some software - while it could further exaserbate the issue, going to wrap FW proc w/ trace debug
	# to see if FW code is calling any config procs to see if I can narrow in on if it is something that I've done in the configs that might be
	# contributing to the issues.

	say_wait S="Taking Mesh"

#	enable_debug_trace
	_BED_MESH_CALIBRATE_STOCK {% for p in params %}{'%s=%s ' % (p, params[p])}{% endfor %}
#	disable_debug_trace

	say_nc S="Meshed"

	Dock_Probe
	SAVE_VARIABLE VARIABLE=last_ptr_state VALUE='"bed_meshed"'	# machine state save

	_proc_end function=BED_MESH_CALIBRATE

#--------------------------------------------------------------------

