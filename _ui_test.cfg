#--------------------------------------------------------------------
# _user_interaction (UI) module: test macros
#--------------------------------------------------------------------

[delayed_gcode _ui_test_module_start]		
#description: Initialization
initial_duration: 0.75							# have this at 0.75s as init code in _startup_autoexec.cfg runs at 0.1s after start
gcode:

	_ui_clear_test_cache

#--------------------------------------------------------------------

[gcode_macro _ui_clear_test_cache]
description: helper proc to wipe/initialize svv contents related to user input
gcode:

	SAVE_VARIABLE VARIABLE=ui_test_day_name VALUE='""'
	SAVE_VARIABLE VARIABLE=ui_test_day_num VALUE=0
	SAVE_VARIABLE VARIABLE=ui_test_float VALUE=-9999999.99
	SAVE_VARIABLE VARIABLE=ui_test_mo_name VALUE='""'
	SAVE_VARIABLE VARIABLE=ui_test_mo_num VALUE=-9999999
	SAVE_VARIABLE VARIABLE=ui_test_year VALUE=-9999999
	
#--------------------------------------------------------------------

[gcode_macro _ui_test_exception_handler]
description: demo use of an exception handler
gcode:

	M118 Welp, you weren't quick enough or made an entry error
	M118 note the hints provide not only what is being asked for
	M118 but also how long the macro is parameterized to wait for user input...
	M118 This is a customized input exception handler for timeout and errorneous input.
	M118 The default handler is what you will observe now.
	M118 -------------------------------
	
	_ui_exception_handler

#--------------------------------------------------------------------

[gcode_macro _start_ui_test]
description:  for demo'g/testing the user interaction 'module'
gcode:
	_ui_clear_test_cache
	
	M118 Good Day, Mate!  The User Interaction (UI) demo/test is starting:
	M118 The User Interaction ('UI' going forward - not to be confused with User Interface) has
	M118 input type and value bounding features, timeout detection, and dynamic forwarding of
	M118 validated input to 'Receiver Macros' enabling interactivity and helping to ensure that
	M118 TYPE of input matches what was requested and is needed by the receiver macro.
	
	# note that when no bounds are asserted in the call, string lengths are bound from 1 to 255 characters as hinted to
	get_user_input prompt="Press any of the UI buttons below to continue:" TYPE=str RCVR_MACRO=_starta_ui_test EXCPT_HDLR=_ui_test_exception_handler

#--------------------------------------------------------------------

[gcode_macro _starta_ui_test]
description:  for demo'g/testing the user interaction 'module'
gcode:

	M118 There ya go - You clicked/entered: {params.UI_INPUT}

	M118 This series of test macros serve to demonstrate these features.
	M118 Timeouts can be assigned from 0 to ~infinity seconds (defaults to 120 seconds).
	M118 This particular test step has an intentionally short timeout assigned (15s).
	M118 This is so user can observe a timeout without having to wait for 2 minutes...
	
	get_user_input prompt="Press any of the UI buttons below to continue:" TYPE=str RCVR_MACRO=_startb_ui_test EXCPT_HDLR=_ui_test_exception_handler TO_PERIOD=15

#--------------------------------------------------------------------

[gcode_macro _startb_ui_test]
description:  for demo'g/testing the user interaction 'module'
gcode:

	M118 Oh Yeah.!.  You clicked/entered: {params.UI_INPUT}

	M118 For an aid in understanding things a bit better, it might be useful to 'tail' the saved vars file
	M118 so that you can see what data is stored and changes as user interaction takes place.  You can do
	M118 with a command such as: tail -f -n 30 /home/pi/klipper_config/your_saved_vars_file.cfg
	M118 in a ssh terminal window.
	
	get_user_input prompt="Press any of the UI buttons below to continue:" TYPE=str RCVR_MACRO=_startc_ui_test EXCPT_HDLR=_ui_test_exception_handler

#--------------------------------------------------------------------

[gcode_macro _startc_ui_test]
description:  for demo'g/testing the user interaction 'module'
gcode:

	M118 Schuite.  You clicked/entered: {params.UI_INPUT}

	M118 The UI module provides hints on the input needed, how quickly it needs to be responded to,
	M118 and also provides a gentle reminder nudge every 30 seconds (customizable period) while waiting
	M118 for user input.
	
	get_user_input prompt="Press any of the UI buttons below to continue:" TYPE=str RCVR_MACRO=_startd_ui_test  EXCPT_HDLR=_ui_test_exception_handler

#--------------------------------------------------------------------

[gcode_macro _startd_ui_test]
description:  for demo'g/testing the user interaction 'module'
gcode:

	M118 Kudos.  You clicked/entered: {params.UI_INPUT}

	M118 For testing, you can let the input timeout and observe the reminder firing and also what happens
	M118 on a timeout, and use the USER ENTRY button to enter an integer/float vs. hitting one of the buttons
	M118 to see what the response is to an invalid input TYPE.
	M118 On this first interaction, the user is requested to enter an integer year within 30 seconds.
	
	get_user_input prompt="Press any of the UI buttons below to continue:" TYPE=str RCVR_MACRO=_ui_test_get_year  EXCPT_HDLR=_ui_test_exception_handler

#--------------------------------------------------------------------

[gcode_macro _ui_test_get_year]
description: first test proc, to get integer year
# note that the proc that is chained to gets passes the previous input in parameter UI_INPUT
# further, the saved variables has additional information which is progammatically exposed
gcode:
	M118 Very good.  You clicked/entered: {params.UI_INPUT}
	M118 Next we're going to be asking for the year.  It is programmatically bound to the years 1900 to 2500.
	M118 Enter an integer, using the USER ENTRY button, that falls outside this range to test integer bounds
	M118 checking and validation.  You should note the hints provided and also the default timeout and/or   
	M118 input exception script functionality.  On this test step, other than RCVR_MACRO macro, TYPE, and bound
	M118 limits assignment, all other parameters of get_user_input are left to default.
	
	get_user_input prompt="Enter the year:" TYPE=int BOUNDS_LO=1900 BOUNDS_HI=2500 RCVR_MACRO=_ui_test_get_mo_name

#--------------------------------------------------------------------

[gcode_macro _ui_test_get_mo_name]	
description: second test proc - chained here by parameters from the first test proc
gcode:

	SAVE_VARIABLE VARIABLE=ui_test_year VALUE='{params.UI_INPUT}'	# save the value for later use
	
	M118 Outstanding.  You entered Year: {params.UI_INPUT}
	M118 Next we're going to be asking for the month name in the form of a string.  For strings, the bounding
	M118 parameters are used to enforce entered string length limits.  In the case of month name, bounding limits
	M118 will be set to accept no less than 3 characters (May is the shortest named month) and no more than
	M118 9 characters (September is the longest named month). For TYPE enforcement validation, try to enter an
	M118 Integer or Float, or try to enter a string with fewer than 3 or more than 9 characters - 60sec timeout
	
	get_user_input prompt="Enter the name of the month:" TYPE=str BOUNDS_LO=3 BOUNDS_HI=9 RCVR_MACRO=_ui_test_get_mo_num TO_PERIOD=60

#--------------------------------------------------------------------

[gcode_macro _ui_test_get_mo_num]	
description:
gcode:
	
	SAVE_VARIABLE VARIABLE=ui_test_mo_name VALUE='{params.UI_INPUT}'	# save the value for later use
	
	M118 Great.  You entered month: {params.UI_INPUT}
	M118 Next we're going to be asking for the month number in the form of a bound integer (1-12).
	M118 You will have 45 seconds to do this.  Be aware that too short of a TO_PERIOD will net drama for
	M118 the user.  The default TO_PERIOD is 120 seconds - recommended caution with short TO_PERIODs, and
	M118 to not have the exception handler be destructive when a timeout occurs - life happens.

	get_user_input prompt="Enter the number of the month:" TYPE=int BOUNDS_LO=1 BOUNDS_HI=12 RCVR_MACRO=_ui_test_get_day_num TO_PERIOD=45

#--------------------------------------------------------------------

[gcode_macro _ui_test_get_day_num]	
description:
gcode:
	
	SAVE_VARIABLE VARIABLE=ui_test_mo_num VALUE='{params.UI_INPUT}'	# save the value for later use
	
	M118 Noice.  You entered month number: {params.UI_INPUT}
	M118 Next we're going to be asking for the day in the month in the form of a bound integer (1-31).
	M118 You will have 45 seconds to input this value.
	
	get_user_input prompt="Enter the number of the day of the month:" TYPE=int BOUNDS_LO=1 BOUNDS_HI=31 RCVR_MACRO=_ui_test_get_day_name TO_PERIOD=45

#--------------------------------------------------------------------

[gcode_macro _ui_test_get_day_name]	
description:
gcode:

	SAVE_VARIABLE VARIABLE=ui_test_day_num VALUE='{params.UI_INPUT}'	# save the value for later use
	
	M118 Good.  You entered day number: {params.UI_INPUT}
	M118 Next we're going to be asking for the day name in the form of a string.  Bounding limits set to
	M118 6 to 9 string characters.
	
	get_user_input prompt="Enter the name of the day today:" TYPE=str BOUNDS_LO=6 BOUNDS_HI=9 RCVR_MACRO=_ui_test_get_float

#--------------------------------------------------------------------

[gcode_macro _ui_test_get_float]	
description:
gcode:

	SAVE_VARIABLE VARIABLE=ui_test_day_name VALUE='{params.UI_INPUT}'	# save the value for later use
	
	M118 Wicked kewl.  You entered day name of: {params.UI_INPUT}
	M118 Next we're going to be asking for a float (decimal number).  These are default bound to values ranging
	M118 from -999999999.0 to 999999999.0.
	
	get_user_input prompt="Enter a float:" TYPE=flt RCVR_MACRO=_ui_test_conclude

#--------------------------------------------------------------------

[gcode_macro _ui_test_conclude]	
description:
gcode:

	SAVE_VARIABLE VARIABLE=ui_test_float VALUE='{params.UI_INPUT}'	# save the value for later use
	
	M118 Good deal.  You entered the value: {params.UI_INPUT}
	M118 The author of this module may expand this test/demo demonstrating use/validation of button
	M118 presses, but hasn't yet identified a time frame for doing so.  Stand by for same... :)
	
	get_user_input prompt="Press any of the UI buttons below to conclude this test/demo:" TYPE=str RCVR_MACRO=_ui_test_concluded 

#--------------------------------------------------------------------

[gcode_macro _ui_test_concluded]	
description:
gcode:

	M118 AAAnnndddd, you clicked/entered: {params.UI_INPUT}

	{% set svv = printer.save_variables.variables %}				# set context for save_variables object
	
	{% set ui_test_interaction_results =  
		"Year: " ~ svv.ui_test_year ~ "<BR>" ~
		"Month | Num: " ~ svv.ui_test_mo_name ~ " | " ~ svv.ui_test_mo_num ~ "<BR>" ~
		"Day | Num: " ~ svv.ui_test_day_name ~ " | " ~ svv.ui_test_day_num ~ "<BR>" ~
		"Entered Float: " ~ svv.ui_test_float ~ "<BR><BR>" 
		%}
	
	M118 {"Codified and Saved Test Results: <BR>" ~ ui_test_interaction_results}
	M118 This concludes the demo of the UI system.  This was only a test.  Had this been a real use case
	M118 things would have certianly been less verbose and more efficient, and your steppers might not have melted.  :)
	M118
	M118 Have a great day.  Happy Printing!!!  -MHz

#--------------------------------------------------------------------

[gcode_macro STOP_DEMO]						# for UI button
description: 
gcode:

	_stop_ui_input_loop
	_stop_ui_reminder
	_stop_ui_timeout_watchdog
	_ui_clear_cache
	_ui_clear_test_cache

#--------------------------------------------------------------------

[gcode_macro START_DEMO]					# for UI button
description: 
gcode:

	_start_ui_test

#--------------------------------------------------------------------
