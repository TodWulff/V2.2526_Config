#####################################################################
# _gmove_debug
#####################################################################

[delayed_gcode _gmove_debug_loaded]
initial_duration: 4.501
gcode:
	_proc_start function=_gmove_debug_loaded func_params='"{rawparams|string}"'
	_module_loaded MODULE=_gmove_debug
	_proc_end function=_gmove_debug_loaded

#--------------------------------------------------------------------

[gcode_macro _info_gmove_debug_macros]
gcode:
	#todo
	
#--------------------------------------------------------------------

[gcode_macro _gmove_debug_vars]
description: macro for _gmove_debug variables

gcode:

	_proc_start function=_gmove_debug_vars func_params='"{rawparams|string}"'

	# there is none, this is for module variable use only

	_proc_end function=_gmove_debug_vars

#--------------------------------------------------------------------

[delayed_gcode _gmove_debug_module_start]
#description: Inits state flags & other stuffs for conditional use elsewhere.
# module load verbosity controlled by _printer_vars in printer.cfg
# module specific verbosity controlled by above
initial_duration: 0.5					# have this at 0.5s as init code in ___startup_autoexec.cfg runs at 0.1s after start
gcode:

	_proc_start function=_gmove_debug_module_start func_params='"{rawparams|string}"'
 
	{% if printer["gcode_macro _printer_vars"].ptr_verb_modload %} M118 >>> _gmove_debug_module_start Start <<< {% endif %}

	SAVE_VARIABLE VARIABLE=module_gmove_debug_loaded VALUE=1						#flag via persistent variable that this module is loaded
	SAVE_VARIABLE VARIABLE=_gmove_debug_err_flag VALUE=0							#init error flag that this module is not in error

	{% if printer["gcode_macro _printer_vars"].ptr_verb_modload %} M118 >>> _gmove_debug_module_start End <<< {% endif %}

	_proc_end function=_gmove_debug_module_start

#--------------------------------------------------------------------

[gcode_macro G0]
#####################################################################
# realtime gcode move debug echo - use selectively...
#####################################################################

description: G0, with console echo if enabled
rename_existing: G0.1
gcode:
	_proc_start function=G0 func_params='"{rawparams|string}"'
#	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} M118 G0 {rawparams|upper} {% endif %}
	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} log_gmove S="G0 {rawparams|upper}" {% endif %}
	G0.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=G0

#--------------------------------------------------------------------

[gcode_macro G1]
description: G1, with console echo if enabled
rename_existing: G1.1
gcode:
	_proc_start function=G1 func_params='"{rawparams|string}"'
#	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} M118 G1 {rawparams|upper} {% endif %}
	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} log_gmove S="G1 {rawparams|upper}" {% endif %}
	G1.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=G1

#--------------------------------------------------------------------

[gcode_macro G4]
description: G4 Delay, with console echo if enabled
rename_existing: G4.1
gcode:
	_proc_start function=G4 func_params='"{rawparams|string}"'
#	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} M118 G4 {rawparams|upper} {% endif %}
	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} log_gmove S="G4 {rawparams|upper}" {% endif %}
#	say S="Dwell"
	G4.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=G4

#--------------------------------------------------------------------

[gcode_macro G10]
description: G10 Retract, with console echo if enabled
rename_existing: G10.1
gcode:
	_proc_start function=G10 func_params='"{rawparams|string}"'
#	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} M118 G10 {rawparams|upper} {% endif %}
	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} log_gmove S="G10 {rawparams|upper}" {% endif %}
	G10.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=G10

#--------------------------------------------------------------------

[gcode_macro G11]
description: G11 Deretract, with console echo if enabled
rename_existing: G11.1
gcode:
	_proc_start function=G11 func_params='"{rawparams|string}"'
#	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} M118 G11 {rawparams|upper} {% endif %}
	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} log_gmove S="G11 {rawparams|upper}" {% endif %}
	G11.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=G11

#--------------------------------------------------------------------

[gcode_macro M220]
description: M220 Speed Rate, with console echo if enabled
rename_existing: M220.1
gcode:
	_proc_start function=M220 func_params='"{rawparams|string}"'
#	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} M118 M220 {rawparams|upper} {% endif %}

	#added this as suggested by Q66 to avoid killing a print by running M220 past a pre-defined lowest setting
	{% if params.S is defined %}
		{% set s = params.S|float %}
		{% if s < printer["gcode_macro _printer_vars"].min_speed_factor|float %}
			{% set s = printer["gcode_macro _printer_vars"].min_speed_factor|float %}
			{% set newparams = rawparams|replace("S", "orig") ~ " S" ~ s|float %}
			M118 Speed Factor Setting Overridden to Min: {s|float}%
		{% else %}
			{% set newparams = rawparams %}
		{% endif %}
	{% endif %}

	say S="Speed {s|int}"
	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} log_gmove S="M220 {newparams}" {% endif %}
	M220.1 {newparams}
	_proc_end function=M220

#--------------------------------------------------------------------

[gcode_macro M221]
description: M221 Extrusion Rate, with console echo if enabled
rename_existing: M221.1
gcode:
	_proc_start function=M221 func_params='"{rawparams|string}"'
#	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} M118 M221 {rawparams|upper} {% endif %}
	{% if printer["gcode_macro _debug_tools_vars"].gmove_debug %} log_gmove S="M221 {rawparams|upper}" {% endif %}
	say S="Extrusion {params.S|int}"
	M221.1 {rawparams}			# debating with the other me if this should be above conditional...
	_proc_end function=M221

#--------------------------------------------------------------------

[gcode_macro _enable_gmove_debug]
description: used to enable gmove debug
gcode:

	_proc_start function=_enable_gmove_debug func_params='"{rawparams|string}"'

	{% if printer["gcode_macro _debug_tools_vars"].debug_verb_status %} M118 >>>>> _enable_gmove_debug <<<<< {% endif %}
	SET_GCODE_VARIABLE MACRO=_debug_tools_vars VARIABLE=gmove_debug VALUE=1
	say S="Gmove trace Enabled"

	_proc_end function=_enable_gmove_debug

#--------------------------------------------------------------------

[gcode_macro _disable_gmove_debug]
description: used to disable gmove debug
gcode:

	_proc_start function=_disable_gmove_debug func_params='"{rawparams|string}"'

	{% if printer["gcode_macro _debug_tools_vars"].debug_verb_status %} M118 >>>>> _disable_gmove_debug <<<<< {% endif %}
	SET_GCODE_VARIABLE MACRO=_debug_tools_vars VARIABLE=gmove_debug VALUE=0
	say S="Gmove trace Disabled"

	_proc_end function=_disable_gmove_debug

#--------------------------------------------------------------------

[gcode_macro enable_gmove_debug]
gcode:

	_proc_start function=enable_gmove_debug func_params='"{rawparams|string}"'

	_enable_gmove_debug

	_proc_end function=enable_gmove_debug

#--------------------------------------------------------------------

[gcode_macro disable_gmove_debug]
gcode:

	_proc_start function=disable_gmove_debug func_params='"{rawparams|string}"'

	_disable_gmove_debug

	_proc_end function=disable_gmove_debug

#--------------------------------------------------------------------

